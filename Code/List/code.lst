
AVRASM ver. 2.1.30  C:\Users\Umaru\Documents\Semester 6\SisMik\Project\Code\List\code.asm Fri May 31 16:00:09 2024

C:\Users\Umaru\Documents\Semester 6\SisMik\Project\Code\List\code.asm(1081): warning: Register r5 already defined by the .DEF directive
C:\Users\Umaru\Documents\Semester 6\SisMik\Project\Code\List\code.asm(1082): warning: Register r4 already defined by the .DEF directive
C:\Users\Umaru\Documents\Semester 6\SisMik\Project\Code\List\code.asm(1083): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.40 Advanced
                 ;(C) Copyright 1998-2020 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Release
                 ;Chip type              : ATmega8535
                 ;Program type           : Application
                 ;Clock frequency        : 12.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Speed
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 384 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 1
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8535
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 512
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x025F
                 	.EQU __DSTACK_SIZE=0x0180
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	RCALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	RCALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c03c      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
000013 cfec      	RJMP 0x00
000014 cfeb      	RJMP 0x00
                 
                 _status_dingin:
000015 6944
000016 676e
000017 6e69
C:\Users\Umaru\Documents\Semester 6\SisMik\Project\Code\List\code.asm(1115): warning: .cseg .db misalignment - padding zero byte
000018 0000      	.DB  0x44,0x69,0x6E,0x67,0x69,0x6E,0x0
                 _status_hangat:
000019 6148
00001a 676e
00001b 7461
C:\Users\Umaru\Documents\Semester 6\SisMik\Project\Code\List\code.asm(1117): warning: .cseg .db misalignment - padding zero byte
00001c 0000      	.DB  0x48,0x61,0x6E,0x67,0x61,0x74,0x0
                 _status_panas:
00001d 6150
00001e 616e
00001f 0073      	.DB  0x50,0x61,0x6E,0x61,0x73,0x0
                 
                 _0x0:
000020 6554
000021 706d
000022 203a
000023 2e25      	.DB  0x54,0x65,0x6D,0x70,0x3A,0x20,0x25,0x2E
000024 6631
000025 4320
000026 5300
000027 6174      	.DB  0x31,0x66,0x20,0x43,0x0,0x53,0x74,0x61
000028 7574
000029 3a73
00002a 2520
00002b 0073      	.DB  0x74,0x75,0x73,0x3A,0x20,0x25,0x73,0x0
                 _0x2000003:
00002c c080      	.DB  0x80,0xC0
                 _0x2020000:
00002d 4e2d
00002e 4e41
C:\Users\Umaru\Documents\Semester 6\SisMik\Project\Code\List\code.asm(1128): warning: .cseg .db misalignment - padding zero byte
00002f 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x20A0060:
C:\Users\Umaru\Documents\Semester 6\SisMik\Project\Code\List\code.asm(1130): warning: .cseg .db misalignment - padding zero byte
000030 0001      	.DB  0x1
                 _0x20A0000:
000031 4e2d
000032 4e41
000033 4900
000034 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\Umaru\Documents\Semester 6\SisMik\Project\Code\List\code.asm(1133): warning: .cseg .db misalignment - padding zero byte
000035 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000036 0002      	.DW  0x02
000037 01e0      	.DW  __base_y_G100
000038 0058      	.DW  _0x2000003*2
                 
000039 0001      	.DW  0x01
00003a 01e4      	.DW  __seed_G105
00003b 0060      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
00003c 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00003d 94f8      	CLI
00003e 27ee      	CLR  R30
00003f bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000040 e0f1      	LDI  R31,1
000041 bffb      	OUT  GICR,R31
000042 bfeb      	OUT  GICR,R30
000043 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000044 e1f8      	LDI  R31,0x18
000045 bdf1      	OUT  WDTCR,R31
000046 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000047 e08d      	LDI  R24,(14-2)+1
000048 e0a2      	LDI  R26,2
000049 27bb      	CLR  R27
                 __CLEAR_REG:
00004a 93ed      	ST   X+,R30
00004b 958a      	DEC  R24
00004c f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00004d e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00004e e092      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004f e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000050 93ed      	ST   X+,R30
000051 9701      	SBIW R24,1
000052 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000053 e6ec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000054 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000055 9185      	LPM  R24,Z+
000056 9195      	LPM  R25,Z+
000057 9700      	SBIW R24,0
000058 f061      	BREQ __GLOBAL_INI_END
000059 91a5      	LPM  R26,Z+
00005a 91b5      	LPM  R27,Z+
00005b 9005      	LPM  R0,Z+
00005c 9015      	LPM  R1,Z+
00005d 01bf      	MOVW R22,R30
00005e 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00005f 9005      	LPM  R0,Z+
000060 920d      	ST   X+,R0
000061 9701      	SBIW R24,1
000062 f7e1      	BRNE __GLOBAL_INI_LOOP
000063 01fb      	MOVW R30,R22
000064 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000065 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000066 bfed      	OUT  SPL,R30
000067 e0e2      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000068 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000069 eec0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00006a e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00006b c07f      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x1E0
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;void adc_init() {
                 ; 0000 0007 void adc_init() {
                 
                 	.CSEG
                 _adc_init:
                 ; .FSTART _adc_init
                 ; 0000 0008 ADMUX = (1 << REFS0); // Referensi tegangan pada AVcc
00006c e4e0      	LDI  R30,LOW(64)
00006d b9e7      	OUT  0x7,R30
                 ; 0000 0009 ADCSRA = (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0); // Enable ADC ...
00006e e8e7      	LDI  R30,LOW(135)
00006f b9e6      	OUT  0x6,R30
                 ; 0000 000A }
000070 9508      	RET
                 ; .FEND
                 ;unsigned int adc_read(unsigned char channel) {
                 ; 0000 000D unsigned int adc_read(unsigned char channel) {
                 _adc_read:
                 ; .FSTART _adc_read
                 ; 0000 000E channel &= 0b00000111; // Masking untuk memastikan channel berada di antara 0-7
000071 93aa      	ST   -Y,R26
                 ;	channel -> Y+0
000072 81e8      	LD   R30,Y
000073 70e7      	ANDI R30,LOW(0x7)
000074 83e8      	ST   Y,R30
                 ; 0000 000F ADMUX = (ADMUX & 0xF8) | channel; // Pilih channel input
000075 b1e7      	IN   R30,0x7
000076 7fe8      	ANDI R30,LOW(0xF8)
000077 81a8      	LD   R26,Y
000078 2bea      	OR   R30,R26
000079 b9e7      	OUT  0x7,R30
                 ; 0000 0010 ADCSRA |= (1 << ADSC); // Mulai konversi
00007a 9a36      	SBI  0x6,6
                 ; 0000 0011 while (ADCSRA & (1 << ADSC)); // Tunggu sampai konversi selesai
                 _0x3:
00007b 9936      	SBIC 0x6,6
00007c cffe      	RJMP _0x3
                 ; 0000 0012 return ADCW; // Kembalikan nilai ADC
00007d b1e4      	IN   R30,0x4
00007e b1f5      	IN   R31,0x4+1
00007f c14a      	RJMP _0x20C0006
                 ; 0000 0013 }
                 ; .FEND
                 ;float get_temperature() {
                 ; 0000 0016 float get_temperature() {
                 _get_temperature:
                 ; .FSTART _get_temperature
                 ; 0000 0017 unsigned int adc_value = adc_read(0);
                 ; 0000 0018 float temperature = adc_value * 0.48828125; // (5 / 1024) * 100
                 ; 0000 0019 float calibration_offset = -0.2; // Penyesuaian kalibrasi
                 ; 0000 001A return temperature + calibration_offset; // Kalibrasi suhu
000080 9728      	SBIW R28,8
000081 eced      	LDI  R30,LOW(205)
000082 83e8      	ST   Y,R30
000083 ecec      	LDI  R30,LOW(204)
000084 83e9      	STD  Y+1,R30
000085 e4ec      	LDI  R30,LOW(76)
000086 83ea      	STD  Y+2,R30
000087 ebee      	LDI  R30,LOW(190)
000088 83eb      	STD  Y+3,R30
000089 d724      	RCALL __SAVELOCR2
                 ;	adc_value -> R16,R17
                 ;	temperature -> Y+6
                 ;	calibration_offset -> Y+2
00008a e0a0      	LDI  R26,LOW(0)
00008b dfe5      	RCALL _adc_read
00008c 018f      	MOVW R16,R30
00008d 2766      	CLR  R22
00008e 2777      	CLR  R23
00008f d843      	RCALL __CDF1
                +
000090 e0a0     +LDI R26 , LOW ( 0x3EFA0000 )
000091 e0b0     +LDI R27 , HIGH ( 0x3EFA0000 )
000092 ef8a     +LDI R24 , BYTE3 ( 0x3EFA0000 )
000093 e39e     +LDI R25 , BYTE4 ( 0x3EFA0000 )
                 	__GETD2N 0x3EFA0000
000094 d8c7      	RCALL __MULF12
                +
000095 83ee     +STD Y + 6 , R30
000096 83ff     +STD Y + 6 + 1 , R31
000097 8768     +STD Y + 6 + 2 , R22
000098 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
                +
000099 81ea     +LDD R30 , Y + 2
00009a 81fb     +LDD R31 , Y + 2 + 1
00009b 816c     +LDD R22 , Y + 2 + 2
00009c 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
00009d 81ae     +LDD R26 , Y + 6
00009e 81bf     +LDD R27 , Y + 6 + 1
00009f 8588     +LDD R24 , Y + 6 + 2
0000a0 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
0000a1 d86b      	RCALL __ADDF12
0000a2 d712      	RCALL __LOADLOCR2
0000a3 962a      	ADIW R28,10
0000a4 9508      	RET
                 ; 0000 001B }
                 ; .FEND
                 ;void timer1_init() {
                 ; 0000 001E void timer1_init() {
                 _timer1_init:
                 ; .FSTART _timer1_init
                 ; 0000 001F TCCR1B = (1 << WGM12) | (1 << CS11) | (1 << CS10); // Mode CTC dan prescaler 64
0000a5 e0eb      	LDI  R30,LOW(11)
0000a6 bdee      	OUT  0x2E,R30
                 ; 0000 0020 OCR1A = 187; // Nilai pembanding untuk menghasilkan interrupt setiap 1ms
0000a7 ebeb      	LDI  R30,LOW(187)
0000a8 e0f0      	LDI  R31,HIGH(187)
0000a9 bdfb      	OUT  0x2A+1,R31
0000aa bdea      	OUT  0x2A,R30
                 ; 0000 0021 TCNT1 = 0; // Reset counter
0000ab e0e0      	LDI  R30,LOW(0)
0000ac e0f0      	LDI  R31,HIGH(0)
0000ad bdfd      	OUT  0x2C+1,R31
0000ae bdec      	OUT  0x2C,R30
                 ; 0000 0022 }
0000af 9508      	RET
                 ; .FEND
                 ;void pin_init() {
                 ; 0000 0025 void pin_init() {
                 _pin_init:
                 ; .FSTART _pin_init
                 ; 0000 0026 DDRA = 0x00; // Port A sebagai input untuk sensor LM35
0000b0 e0e0      	LDI  R30,LOW(0)
0000b1 bbea      	OUT  0x1A,R30
                 ; 0000 0027 DDRB = 0x07; // Port B sebagai output untuk LED (PIN.B0 - PIN.B2)
0000b2 e0e7      	LDI  R30,LOW(7)
0000b3 bbe7      	OUT  0x17,R30
                 ; 0000 0028 DDRC = 0xFF; // Port C sebagai output untuk LCD
0000b4 efef      	LDI  R30,LOW(255)
0000b5 bbe4      	OUT  0x14,R30
                 ; 0000 0029 }
0000b6 9508      	RET
                 ; .FEND
                 ;void set_led(float temperature) {
                 ; 0000 002C void set_led(float temperature) {
                 _set_led:
                 ; .FSTART _set_led
                 ; 0000 002D PORTB &= ~(1 << PORTB0); // Matikan LED Biru
0000b7 d799      	RCALL __PUTPARD2
                 ;	temperature -> Y+0
0000b8 98c0      	CBI  0x18,0
                 ; 0000 002E PORTB &= ~(1 << PORTB1); // Matikan LED Hijau
0000b9 98c1      	CBI  0x18,1
                 ; 0000 002F PORTB &= ~(1 << PORTB2); // Matikan LED Merah
0000ba 98c2      	CBI  0x18,2
                 ; 0000 0030 
                 ; 0000 0031 if (temperature < 25.0) {
0000bb d786      	RCALL __GETD2S0
                +
0000bc e0e0     +LDI R30 , LOW ( 0x41C80000 )
0000bd e0f0     +LDI R31 , HIGH ( 0x41C80000 )
0000be ec68     +LDI R22 , BYTE3 ( 0x41C80000 )
0000bf e471     +LDI R23 , BYTE4 ( 0x41C80000 )
                 	__GETD1N 0x41C80000
0000c0 d92d      	RCALL __CMPF12
0000c1 f410      	BRSH _0x6
                 ; 0000 0032 PORTB |= (1 << PORTB0); // Nyalakan LED Biru
0000c2 9ac0      	SBI  0x18,0
                 ; 0000 0033 } else if (temperature <= 35.0) {
0000c3 c00c      	RJMP _0x7
                 _0x6:
0000c4 d77d      	RCALL __GETD2S0
                +
0000c5 e0e0     +LDI R30 , LOW ( 0x420C0000 )
0000c6 e0f0     +LDI R31 , HIGH ( 0x420C0000 )
0000c7 e06c     +LDI R22 , BYTE3 ( 0x420C0000 )
0000c8 e472     +LDI R23 , BYTE4 ( 0x420C0000 )
                 	__GETD1N 0x420C0000
0000c9 d924      	RCALL __CMPF12
0000ca f011      	BREQ PC+3
0000cb f008      	BRCS PC+2
0000cc c002      	RJMP _0x8
                 ; 0000 0034 PORTB |= (1 << PORTB1); // Nyalakan LED Hijau
0000cd 9ac1      	SBI  0x18,1
                 ; 0000 0035 } else {
0000ce c001      	RJMP _0x9
                 _0x8:
                 ; 0000 0036 PORTB |= (1 << PORTB2); // Nyalakan LED Merah
0000cf 9ac2      	SBI  0x18,2
                 ; 0000 0037 }
                 _0x9:
                 _0x7:
                 ; 0000 0038 }
0000d0 c5ca      	RJMP _0x20C0003
                 ; .FEND
                 ;flash char status_dingin[] = "Dingin";
                 ;flash char status_hangat[] = "Hangat";
                 ;flash char status_panas[] = "Panas";
                 ;flash char* get_room_status(float temperature) {
                 ; 0000 003F flash char* get_room_status(float temperature) {
                 _get_room_status:
                 ; .FSTART _get_room_status
                 ; 0000 0040 if (temperature < 25.0) {
0000d1 d77f      	RCALL __PUTPARD2
                 ;	temperature -> Y+0
0000d2 d76f      	RCALL __GETD2S0
                +
0000d3 e0e0     +LDI R30 , LOW ( 0x41C80000 )
0000d4 e0f0     +LDI R31 , HIGH ( 0x41C80000 )
0000d5 ec68     +LDI R22 , BYTE3 ( 0x41C80000 )
0000d6 e471     +LDI R23 , BYTE4 ( 0x41C80000 )
                 	__GETD1N 0x41C80000
0000d7 d916      	RCALL __CMPF12
0000d8 f418      	BRSH _0xA
                 ; 0000 0041 return status_dingin;
0000d9 e2ea      	LDI  R30,LOW(_status_dingin*2)
0000da e0f0      	LDI  R31,HIGH(_status_dingin*2)
0000db c5bf      	RJMP _0x20C0003
                 ; 0000 0042 } else if (temperature <= 35.0) {
                 _0xA:
0000dc d765      	RCALL __GETD2S0
                +
0000dd e0e0     +LDI R30 , LOW ( 0x420C0000 )
0000de e0f0     +LDI R31 , HIGH ( 0x420C0000 )
0000df e06c     +LDI R22 , BYTE3 ( 0x420C0000 )
0000e0 e472     +LDI R23 , BYTE4 ( 0x420C0000 )
                 	__GETD1N 0x420C0000
0000e1 d90c      	RCALL __CMPF12
0000e2 f011      	BREQ PC+3
0000e3 f008      	BRCS PC+2
0000e4 c003      	RJMP _0xC
                 ; 0000 0043 return status_hangat;
0000e5 e3e2      	LDI  R30,LOW(_status_hangat*2)
0000e6 e0f0      	LDI  R31,HIGH(_status_hangat*2)
0000e7 c5b3      	RJMP _0x20C0003
                 ; 0000 0044 } else {
                 _0xC:
                 ; 0000 0045 return status_panas;
0000e8 e3ea      	LDI  R30,LOW(_status_panas*2)
0000e9 e0f0      	LDI  R31,HIGH(_status_panas*2)
0000ea c5b0      	RJMP _0x20C0003
                 ; 0000 0046 }
                 ; 0000 0047 }
                 ; .FEND
                 ;void main(void) {
                 ; 0000 004A void main(void) {
                 _main:
                 ; .FSTART _main
                 ; 0000 004B float temperature;
                 ; 0000 004C char temp_str[16];
                 ; 0000 004D char status_str[16];
                 ; 0000 004E 
                 ; 0000 004F adc_init();
0000eb 97a4      	SBIW R28,36
                 ;	temperature -> Y+32
                 ;	temp_str -> Y+16
                 ;	status_str -> Y+0
0000ec df7f      	RCALL _adc_init
                 ; 0000 0050 lcd_init(16);
0000ed e1a0      	LDI  R26,LOW(16)
0000ee d0a4      	RCALL _lcd_init
                 ; 0000 0051 timer1_init();
0000ef dfb5      	RCALL _timer1_init
                 ; 0000 0052 pin_init();
0000f0 dfbf      	RCALL _pin_init
                 ; 0000 0053 
                 ; 0000 0054 while (1) {
                 _0xE:
                 ; 0000 0055 temperature = get_temperature();
0000f1 df8e      	RCALL _get_temperature
                +
0000f2 a3e8     +STD Y + 32 , R30
0000f3 a3f9     +STD Y + 32 + 1 , R31
0000f4 a36a     +STD Y + 32 + 2 , R22
0000f5 a37b     +STD Y + 32 + 3 , R23
                 	__PUTD1S 32
                 ; 0000 0056 set_led(temperature);
                +
0000f6 a1a8     +LDD R26 , Y + 32
0000f7 a1b9     +LDD R27 , Y + 32 + 1
0000f8 a18a     +LDD R24 , Y + 32 + 2
0000f9 a19b     +LDD R25 , Y + 32 + 3
                 	__GETD2S 32
0000fa dfbc      	RCALL _set_led
                 ; 0000 0057 
                 ; 0000 0058 sprintf(temp_str, "Temp: %.1f C", temperature);
0000fb 01fe      	MOVW R30,R28
0000fc 9670      	ADIW R30,16
0000fd 93fa      	ST   -Y,R31
0000fe 93ea      	ST   -Y,R30
                +
0000ff e4e0     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000100 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000101 93fa      	ST   -Y,R31
000102 93ea      	ST   -Y,R30
                +
000103 a1ec     +LDD R30 , Y + 36
000104 a1fd     +LDD R31 , Y + 36 + 1
000105 a16e     +LDD R22 , Y + 36 + 2
000106 a17f     +LDD R23 , Y + 36 + 3
                 	__GETD1S 36
000107 d744      	RCALL __PUTPARD1
000108 e084      	LDI  R24,4
000109 d4f8      	RCALL _sprintf
00010a 9628      	ADIW R28,8
                 ; 0000 0059 sprintf(status_str, "Status: %s", get_room_status(temperature));
00010b 01fe      	MOVW R30,R28
00010c 93fa      	ST   -Y,R31
00010d 93ea      	ST   -Y,R30
                +
00010e e4ed     +LDI R30 , LOW ( 2 * _0x0 + ( 13 ) )
00010f e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 13 ) )
                 	__POINTW1FN _0x0,13
000110 93fa      	ST   -Y,R31
000111 93ea      	ST   -Y,R30
                +
000112 a1ac     +LDD R26 , Y + 36
000113 a1bd     +LDD R27 , Y + 36 + 1
000114 a18e     +LDD R24 , Y + 36 + 2
000115 a19f     +LDD R25 , Y + 36 + 3
                 	__GETD2S 36
000116 dfba      	RCALL _get_room_status
000117 2766      	CLR  R22
000118 2777      	CLR  R23
000119 d732      	RCALL __PUTPARD1
00011a e084      	LDI  R24,4
00011b d4e6      	RCALL _sprintf
00011c 9628      	ADIW R28,8
                 ; 0000 005A 
                 ; 0000 005B lcd_clear();
00011d d03f      	RCALL _lcd_clear
                 ; 0000 005C lcd_gotoxy(0, 0);
00011e e0e0      	LDI  R30,LOW(0)
00011f 93ea      	ST   -Y,R30
000120 e0a0      	LDI  R26,LOW(0)
000121 d02e      	RCALL _lcd_gotoxy
                 ; 0000 005D lcd_puts(temp_str);
000122 01de      	MOVW R26,R28
000123 9650      	ADIW R26,16
000124 d05d      	RCALL _lcd_puts
                 ; 0000 005E 
                 ; 0000 005F lcd_gotoxy(0, 1);
000125 e0e0      	LDI  R30,LOW(0)
000126 93ea      	ST   -Y,R30
000127 e0a1      	LDI  R26,LOW(1)
000128 d027      	RCALL _lcd_gotoxy
                 ; 0000 0060 lcd_puts(status_str);
000129 01de      	MOVW R26,R28
00012a d057      	RCALL _lcd_puts
                 ; 0000 0061 
                 ; 0000 0062 delay_ms(1000);
00012b eea8      	LDI  R26,LOW(1000)
00012c e0b3      	LDI  R27,HIGH(1000)
00012d d8e0      	RCALL _delay_ms
                 ; 0000 0063 }
00012e cfc2      	RJMP _0xE
                 ; 0000 0064 }
                 _0x11:
00012f cfff      	RJMP _0x11
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
000130 93aa      	ST   -Y,R26
000131 b3e5      	IN   R30,0x15
000132 70ef      	ANDI R30,LOW(0xF)
000133 2fae      	MOV  R26,R30
000134 81e8      	LD   R30,Y
000135 7fe0      	ANDI R30,LOW(0xF0)
000136 2bea      	OR   R30,R26
000137 bbe5      	OUT  0x15,R30
                +
000138 e184     +LDI R24 , LOW ( 20 )
                +__DELAY_USB_LOOP :
000139 958a     +DEC R24
00013a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 20
00013b 9aaa      	SBI  0x15,2
                +
00013c e184     +LDI R24 , LOW ( 20 )
                +__DELAY_USB_LOOP :
00013d 958a     +DEC R24
00013e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 20
00013f 98aa      	CBI  0x15,2
                +
000140 e184     +LDI R24 , LOW ( 20 )
                +__DELAY_USB_LOOP :
000141 958a     +DEC R24
000142 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 20
000143 c086      	RJMP _0x20C0006
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000144 93aa      	ST   -Y,R26
000145 81a8      	LD   R26,Y
000146 dfe9      	RCALL __lcd_write_nibble_G100
000147 81e8          ld    r30,y
000148 95e2          swap  r30
000149 83e8          st    y,r30
00014a 81a8      	LD   R26,Y
00014b dfe4      	RCALL __lcd_write_nibble_G100
                +
00014c ec88     +LDI R24 , LOW ( 200 )
                +__DELAY_USB_LOOP :
00014d 958a     +DEC R24
00014e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 200
00014f c07a      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000150 93aa      	ST   -Y,R26
000151 81e8      	LD   R30,Y
000152 e0f0      	LDI  R31,0
000153 52e0      	SUBI R30,LOW(-__base_y_G100)
000154 4ffe      	SBCI R31,HIGH(-__base_y_G100)
000155 81e0      	LD   R30,Z
000156 81a9      	LDD  R26,Y+1
000157 0fae      	ADD  R26,R30
000158 dfeb      	RCALL __lcd_write_data
000159 8059      	LDD  R5,Y+1
00015a 8048      	LDD  R4,Y+0
00015b 9622      	ADIW R28,2
00015c 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
00015d e0a2      	LDI  R26,LOW(2)
00015e dfe5      	RCALL __lcd_write_data
00015f e0a3      	LDI  R26,LOW(3)
000160 e0b0      	LDI  R27,0
000161 d8ac      	RCALL _delay_ms
000162 e0ac      	LDI  R26,LOW(12)
000163 dfe0      	RCALL __lcd_write_data
000164 e0a1      	LDI  R26,LOW(1)
000165 dfde      	RCALL __lcd_write_data
000166 e0a3      	LDI  R26,LOW(3)
000167 e0b0      	LDI  R27,0
000168 d8a5      	RCALL _delay_ms
000169 e0e0      	LDI  R30,LOW(0)
00016a 2e4e      	MOV  R4,R30
00016b 2e5e      	MOV  R5,R30
00016c 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
00016d 93aa      	ST   -Y,R26
00016e 81a8      	LD   R26,Y
00016f 30aa      	CPI  R26,LOW(0xA)
000170 f011      	BREQ _0x2000005
000171 1457      	CP   R5,R7
000172 f048      	BRLO _0x2000004
                 _0x2000005:
000173 e0e0      	LDI  R30,LOW(0)
000174 93ea      	ST   -Y,R30
000175 9443      	INC  R4
000176 2da4      	MOV  R26,R4
000177 dfd8      	RCALL _lcd_gotoxy
000178 81a8      	LD   R26,Y
000179 30aa      	CPI  R26,LOW(0xA)
00017a f409      	BRNE _0x2000007
00017b c04e      	RJMP _0x20C0006
                 _0x2000007:
                 _0x2000004:
00017c 9453      	INC  R5
00017d 9aa8      	SBI  0x15,0
00017e 81a8      	LD   R26,Y
00017f dfc4      	RCALL __lcd_write_data
000180 98a8      	CBI  0x15,0
000181 c048      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000182 93ba      	ST   -Y,R27
000183 93aa      	ST   -Y,R26
000184 931a      	ST   -Y,R17
                 _0x2000008:
000185 81a9      	LDD  R26,Y+1
000186 81ba      	LDD  R27,Y+1+1
000187 91ed      	LD   R30,X+
000188 83a9      	STD  Y+1,R26
000189 83ba      	STD  Y+1+1,R27
00018a 2f1e      	MOV  R17,R30
00018b 30e0      	CPI  R30,0
00018c f019      	BREQ _0x200000A
00018d 2fa1      	MOV  R26,R17
00018e dfde      	RCALL _lcd_putchar
00018f cff5      	RJMP _0x2000008
                 _0x200000A:
000190 8118      	LDD  R17,Y+0
000191 9623      	ADIW R28,3
000192 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000193 93aa      	ST   -Y,R26
000194 b3e4      	IN   R30,0x14
000195 6fe0      	ORI  R30,LOW(0xF0)
000196 bbe4      	OUT  0x14,R30
000197 9aa2      	SBI  0x14,2
000198 9aa0      	SBI  0x14,0
000199 9aa1      	SBI  0x14,1
00019a 98aa      	CBI  0x15,2
00019b 98a8      	CBI  0x15,0
00019c 98a9      	CBI  0x15,1
00019d 8078      	LDD  R7,Y+0
00019e 81e8      	LD   R30,Y
00019f 58e0      	SUBI R30,-LOW(128)
                +
0001a0 93e0 01e2+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
0001a2 81e8      	LD   R30,Y
0001a3 54e0      	SUBI R30,-LOW(192)
                +
0001a4 93e0 01e3+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
0001a6 e1a4      	LDI  R26,LOW(20)
0001a7 e0b0      	LDI  R27,0
0001a8 d865      	RCALL _delay_ms
0001a9 e3a0      	LDI  R26,LOW(48)
0001aa df85      	RCALL __lcd_write_nibble_G100
                +
0001ab e28c     +LDI R24 , LOW ( 300 )
0001ac e091     +LDI R25 , HIGH ( 300 )
                +__DELAY_USW_LOOP :
0001ad 9701     +SBIW R24 , 1
0001ae f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 300
0001af e3a0      	LDI  R26,LOW(48)
0001b0 df7f      	RCALL __lcd_write_nibble_G100
                +
0001b1 e28c     +LDI R24 , LOW ( 300 )
0001b2 e091     +LDI R25 , HIGH ( 300 )
                +__DELAY_USW_LOOP :
0001b3 9701     +SBIW R24 , 1
0001b4 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 300
0001b5 e3a0      	LDI  R26,LOW(48)
0001b6 df79      	RCALL __lcd_write_nibble_G100
                +
0001b7 e28c     +LDI R24 , LOW ( 300 )
0001b8 e091     +LDI R25 , HIGH ( 300 )
                +__DELAY_USW_LOOP :
0001b9 9701     +SBIW R24 , 1
0001ba f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 300
0001bb e2a0      	LDI  R26,LOW(32)
0001bc df73      	RCALL __lcd_write_nibble_G100
                +
0001bd e28c     +LDI R24 , LOW ( 300 )
0001be e091     +LDI R25 , HIGH ( 300 )
                +__DELAY_USW_LOOP :
0001bf 9701     +SBIW R24 , 1
0001c0 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 300
0001c1 e2a8      	LDI  R26,LOW(40)
0001c2 df81      	RCALL __lcd_write_data
0001c3 e0a4      	LDI  R26,LOW(4)
0001c4 df7f      	RCALL __lcd_write_data
0001c5 e8a5      	LDI  R26,LOW(133)
0001c6 df7d      	RCALL __lcd_write_data
0001c7 e0a6      	LDI  R26,LOW(6)
0001c8 df7b      	RCALL __lcd_write_data
0001c9 df93      	RCALL _lcd_clear
                 _0x20C0006:
0001ca 9621      	ADIW R28,1
0001cb 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
0001cc 93ba      	ST   -Y,R27
0001cd 93aa      	ST   -Y,R26
0001ce d5df      	RCALL __SAVELOCR2
0001cf 81aa      	LDD  R26,Y+2
0001d0 81bb      	LDD  R27,Y+2+1
0001d1 9612      	ADIW R26,2
0001d2 d64f      	RCALL __GETW1P
0001d3 9730      	SBIW R30,0
0001d4 f149      	BREQ _0x2020010
0001d5 81aa      	LDD  R26,Y+2
0001d6 81bb      	LDD  R27,Y+2+1
0001d7 9614      	ADIW R26,4
0001d8 d649      	RCALL __GETW1P
0001d9 018f      	MOVW R16,R30
0001da 9730      	SBIW R30,0
0001db f061      	BREQ _0x2020012
                +
0001dc 3002     +CPI R16 , LOW ( 2 )
0001dd e0e0     +LDI R30 , HIGH ( 2 )
0001de 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0001df f098      	BRLO _0x2020013
0001e0 01f8      	MOVW R30,R16
0001e1 9731      	SBIW R30,1
0001e2 018f      	MOVW R16,R30
                +
0001e3 81aa     +LDD R26 , Y + 2
0001e4 81bb     +LDD R27 , Y + 2 + 1
0001e5 9614     +ADIW R26 , 4
0001e6 93ed     +ST X + , R30
0001e7 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
0001e8 81aa      	LDD  R26,Y+2
0001e9 81bb      	LDD  R27,Y+2+1
0001ea 9612      	ADIW R26,2
0001eb 91ed      	LD   R30,X+
0001ec 91fd      	LD   R31,X+
0001ed 9631      	ADIW R30,1
0001ee 93fe      	ST   -X,R31
0001ef 93ee      	ST   -X,R30
0001f0 9731      	SBIW R30,1
0001f1 81ac      	LDD  R26,Y+4
0001f2 83a0      	STD  Z+0,R26
                 _0x2020013:
0001f3 81aa      	LDD  R26,Y+2
0001f4 81bb      	LDD  R27,Y+2+1
0001f5 d62c      	RCALL __GETW1P
0001f6 23ff      	TST  R31
0001f7 f02a      	BRMI _0x2020014
0001f8 91ed      	LD   R30,X+
0001f9 91fd      	LD   R31,X+
0001fa 9631      	ADIW R30,1
0001fb 93fe      	ST   -X,R31
0001fc 93ee      	ST   -X,R30
                 _0x2020014:
0001fd c006      	RJMP _0x2020015
                 _0x2020010:
0001fe 81aa      	LDD  R26,Y+2
0001ff 81bb      	LDD  R27,Y+2+1
000200 efef      	LDI  R30,LOW(65535)
000201 efff      	LDI  R31,HIGH(65535)
000202 93ed      	ST   X+,R30
000203 93fc      	ST   X,R31
                 _0x2020015:
000204 d5b0      	RCALL __LOADLOCR2
000205 9625      	ADIW R28,5
000206 9508      	RET
                 ; .FEND
                 __ftoe_G101:
                 ; .FSTART __ftoe_G101
000207 93ba      	ST   -Y,R27
000208 93aa      	ST   -Y,R26
000209 9724      	SBIW R28,4
00020a e0e0      	LDI  R30,LOW(0)
00020b 83e8      	ST   Y,R30
00020c 83e9      	STD  Y+1,R30
00020d e8e0      	LDI  R30,LOW(128)
00020e 83ea      	STD  Y+2,R30
00020f e3ef      	LDI  R30,LOW(63)
000210 83eb      	STD  Y+3,R30
000211 d59a      	RCALL __SAVELOCR4
000212 85ee      	LDD  R30,Y+14
000213 85ff      	LDD  R31,Y+14+1
000214 3fef      	CPI  R30,LOW(0xFFFF)
000215 efaf      	LDI  R26,HIGH(0xFFFF)
000216 07fa      	CPC  R31,R26
000217 f441      	BRNE _0x2020019
000218 85e8      	LDD  R30,Y+8
000219 85f9      	LDD  R31,Y+8+1
00021a 93fa      	ST   -Y,R31
00021b 93ea      	ST   -Y,R30
                +
00021c e5aa     +LDI R26 , LOW ( 2 * _0x2020000 + ( 0 ) )
00021d e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 0 ) )
                 	__POINTW2FN _0x2020000,0
00021e d418      	RCALL _strcpyf
00021f c12b      	RJMP _0x20C0005
                 _0x2020019:
000220 3fef      	CPI  R30,LOW(0x7FFF)
000221 e7af      	LDI  R26,HIGH(0x7FFF)
000222 07fa      	CPC  R31,R26
000223 f441      	BRNE _0x2020018
000224 85e8      	LDD  R30,Y+8
000225 85f9      	LDD  R31,Y+8+1
000226 93fa      	ST   -Y,R31
000227 93ea      	ST   -Y,R30
                +
000228 e5ab     +LDI R26 , LOW ( 2 * _0x2020000 + ( 1 ) )
000229 e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 1 ) )
                 	__POINTW2FN _0x2020000,1
00022a d40c      	RCALL _strcpyf
00022b c11f      	RJMP _0x20C0005
                 _0x2020018:
00022c 85ab      	LDD  R26,Y+11
00022d 30a7      	CPI  R26,LOW(0x7)
00022e f010      	BRLO _0x202001B
00022f e0e6      	LDI  R30,LOW(6)
000230 87eb      	STD  Y+11,R30
                 _0x202001B:
000231 851b      	LDD  R17,Y+11
                 _0x202001C:
000232 2fe1      	MOV  R30,R17
000233 5011      	SUBI R17,1
000234 30e0      	CPI  R30,0
000235 f071      	BREQ _0x202001E
                +
000236 81ac     +LDD R26 , Y + 4
000237 81bd     +LDD R27 , Y + 4 + 1
000238 818e     +LDD R24 , Y + 4 + 2
000239 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
00023a e0e0     +LDI R30 , LOW ( 0x41200000 )
00023b e0f0     +LDI R31 , HIGH ( 0x41200000 )
00023c e260     +LDI R22 , BYTE3 ( 0x41200000 )
00023d e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00023e d71d      	RCALL __MULF12
                +
00023f 83ec     +STD Y + 4 , R30
000240 83fd     +STD Y + 4 + 1 , R31
000241 836e     +STD Y + 4 + 2 , R22
000242 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000243 cfee      	RJMP _0x202001C
                 _0x202001E:
                +
000244 85ec     +LDD R30 , Y + 12
000245 85fd     +LDD R31 , Y + 12 + 1
000246 856e     +LDD R22 , Y + 12 + 2
000247 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000248 d61a      	RCALL __CPD10
000249 f479      	BRNE _0x202001F
00024a e030      	LDI  R19,LOW(0)
                +
00024b 81ac     +LDD R26 , Y + 4
00024c 81bd     +LDD R27 , Y + 4 + 1
00024d 818e     +LDD R24 , Y + 4 + 2
00024e 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
00024f e0e0     +LDI R30 , LOW ( 0x41200000 )
000250 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000251 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000252 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000253 d708      	RCALL __MULF12
                +
000254 83ec     +STD Y + 4 , R30
000255 83fd     +STD Y + 4 + 1 , R31
000256 836e     +STD Y + 4 + 2 , R22
000257 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000258 c073      	RJMP _0x2020020
                 _0x202001F:
000259 853b      	LDD  R19,Y+11
                +
00025a 81ec     +LDD R30 , Y + 4
00025b 81fd     +LDD R31 , Y + 4 + 1
00025c 816e     +LDD R22 , Y + 4 + 2
00025d 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
00025e 85ac     +LDD R26 , Y + 12
00025f 85bd     +LDD R27 , Y + 12 + 1
000260 858e     +LDD R24 , Y + 12 + 2
000261 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000262 d78b      	RCALL __CMPF12
000263 f009      	BREQ PC+2
000264 f408      	BRCC PC+2
000265 c023      	RJMP _0x2020021
                +
000266 81ac     +LDD R26 , Y + 4
000267 81bd     +LDD R27 , Y + 4 + 1
000268 818e     +LDD R24 , Y + 4 + 2
000269 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
00026a e0e0     +LDI R30 , LOW ( 0x41200000 )
00026b e0f0     +LDI R31 , HIGH ( 0x41200000 )
00026c e260     +LDI R22 , BYTE3 ( 0x41200000 )
00026d e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00026e d6ed      	RCALL __MULF12
                +
00026f 83ec     +STD Y + 4 , R30
000270 83fd     +STD Y + 4 + 1 , R31
000271 836e     +STD Y + 4 + 2 , R22
000272 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                 _0x2020022:
                +
000273 81ec     +LDD R30 , Y + 4
000274 81fd     +LDD R31 , Y + 4 + 1
000275 816e     +LDD R22 , Y + 4 + 2
000276 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000277 85ac     +LDD R26 , Y + 12
000278 85bd     +LDD R27 , Y + 12 + 1
000279 858e     +LDD R24 , Y + 12 + 2
00027a 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00027b d772      	RCALL __CMPF12
00027c f058      	BRLO _0x2020024
                +
00027d eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00027e ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00027f ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000280 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000281 d6da      	RCALL __MULF12
                +
000282 87ec     +STD Y + 12 , R30
000283 87fd     +STD Y + 12 + 1 , R31
000284 876e     +STD Y + 12 + 2 , R22
000285 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000286 5f3f      	SUBI R19,-LOW(1)
000287 cfeb      	RJMP _0x2020022
                 _0x2020024:
000288 c022      	RJMP _0x2020025
                 _0x2020021:
                 _0x2020026:
                +
000289 81ec     +LDD R30 , Y + 4
00028a 81fd     +LDD R31 , Y + 4 + 1
00028b 816e     +LDD R22 , Y + 4 + 2
00028c 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
00028d 85ac     +LDD R26 , Y + 12
00028e 85bd     +LDD R27 , Y + 12 + 1
00028f 858e     +LDD R24 , Y + 12 + 2
000290 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000291 d75c      	RCALL __CMPF12
000292 f458      	BRSH _0x2020028
                +
000293 e0e0     +LDI R30 , LOW ( 0x41200000 )
000294 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000295 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000296 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000297 d6c4      	RCALL __MULF12
                +
000298 87ec     +STD Y + 12 , R30
000299 87fd     +STD Y + 12 + 1 , R31
00029a 876e     +STD Y + 12 + 2 , R22
00029b 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00029c 5031      	SUBI R19,LOW(1)
00029d cfeb      	RJMP _0x2020026
                 _0x2020028:
                +
00029e 81ac     +LDD R26 , Y + 4
00029f 81bd     +LDD R27 , Y + 4 + 1
0002a0 818e     +LDD R24 , Y + 4 + 2
0002a1 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
0002a2 e0e0     +LDI R30 , LOW ( 0x41200000 )
0002a3 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0002a4 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0002a5 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0002a6 d6b5      	RCALL __MULF12
                +
0002a7 83ec     +STD Y + 4 , R30
0002a8 83fd     +STD Y + 4 + 1 , R31
0002a9 836e     +STD Y + 4 + 2 , R22
0002aa 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                 _0x2020025:
                +
0002ab 85ec     +LDD R30 , Y + 12
0002ac 85fd     +LDD R31 , Y + 12 + 1
0002ad 856e     +LDD R22 , Y + 12 + 2
0002ae 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
                +
0002af e0a0     +LDI R26 , LOW ( 0x3F000000 )
0002b0 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0002b1 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0002b2 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0002b3 d659      	RCALL __ADDF12
                +
0002b4 87ec     +STD Y + 12 , R30
0002b5 87fd     +STD Y + 12 + 1 , R31
0002b6 876e     +STD Y + 12 + 2 , R22
0002b7 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
                +
0002b8 81ec     +LDD R30 , Y + 4
0002b9 81fd     +LDD R31 , Y + 4 + 1
0002ba 816e     +LDD R22 , Y + 4 + 2
0002bb 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0002bc 85ac     +LDD R26 , Y + 12
0002bd 85bd     +LDD R27 , Y + 12 + 1
0002be 858e     +LDD R24 , Y + 12 + 2
0002bf 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0002c0 d72d      	RCALL __CMPF12
0002c1 f050      	BRLO _0x2020029
                +
0002c2 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0002c3 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0002c4 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0002c5 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0002c6 d695      	RCALL __MULF12
                +
0002c7 87ec     +STD Y + 12 , R30
0002c8 87fd     +STD Y + 12 + 1 , R31
0002c9 876e     +STD Y + 12 + 2 , R22
0002ca 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0002cb 5f3f      	SUBI R19,-LOW(1)
                 _0x2020029:
                 _0x2020020:
0002cc e010      	LDI  R17,LOW(0)
                 _0x202002A:
0002cd 85eb      	LDD  R30,Y+11
0002ce 17e1      	CP   R30,R17
0002cf f408      	BRSH PC+2
0002d0 c046      	RJMP _0x202002C
                +
0002d1 81ac     +LDD R26 , Y + 4
0002d2 81bd     +LDD R27 , Y + 4 + 1
0002d3 818e     +LDD R24 , Y + 4 + 2
0002d4 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
0002d5 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0002d6 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0002d7 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0002d8 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0002d9 d682      	RCALL __MULF12
                +
0002da e0a0     +LDI R26 , LOW ( 0x3F000000 )
0002db e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0002dc e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0002dd e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0002de d62e      	RCALL __ADDF12
0002df 01df      	MOVW R26,R30
0002e0 01cb      	MOVW R24,R22
0002e1 d3ab      	RCALL _floor
                +
0002e2 83ec     +STD Y + 4 , R30
0002e3 83fd     +STD Y + 4 + 1 , R31
0002e4 836e     +STD Y + 4 + 2 , R22
0002e5 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                +
0002e6 85ac     +LDD R26 , Y + 12
0002e7 85bd     +LDD R27 , Y + 12 + 1
0002e8 858e     +LDD R24 , Y + 12 + 2
0002e9 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0002ea d6bf      	RCALL __DIVF21
0002eb d5ae      	RCALL __CFD1U
0002ec 2f0e      	MOV  R16,R30
0002ed 85a8      	LDD  R26,Y+8
0002ee 85b9      	LDD  R27,Y+8+1
0002ef 9611      	ADIW R26,1
0002f0 87a8      	STD  Y+8,R26
0002f1 87b9      	STD  Y+8+1,R27
0002f2 9711      	SBIW R26,1
0002f3 5de0      	SUBI R30,-LOW(48)
0002f4 93ec      	ST   X,R30
0002f5 2fe0      	MOV  R30,R16
0002f6 27ff      	CLR  R31
0002f7 2766      	CLR  R22
0002f8 2777      	CLR  R23
0002f9 d5d9      	RCALL __CDF1
                +
0002fa 81ac     +LDD R26 , Y + 4
0002fb 81bd     +LDD R27 , Y + 4 + 1
0002fc 818e     +LDD R24 , Y + 4 + 2
0002fd 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0002fe d65d      	RCALL __MULF12
                +
0002ff 85ac     +LDD R26 , Y + 12
000300 85bd     +LDD R27 , Y + 12 + 1
000301 858e     +LDD R24 , Y + 12 + 2
000302 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000303 d552      	RCALL __SWAPD12
000304 d601      	RCALL __SUBF12
                +
000305 87ec     +STD Y + 12 , R30
000306 87fd     +STD Y + 12 + 1 , R31
000307 876e     +STD Y + 12 + 2 , R22
000308 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000309 2fe1      	MOV  R30,R17
00030a 5f1f      	SUBI R17,-1
00030b 30e0      	CPI  R30,0
00030c f009      	BREQ _0x202002D
00030d cfbf      	RJMP _0x202002A
                 _0x202002D:
00030e 85a8      	LDD  R26,Y+8
00030f 85b9      	LDD  R27,Y+8+1
000310 9611      	ADIW R26,1
000311 87a8      	STD  Y+8,R26
000312 87b9      	STD  Y+8+1,R27
000313 9711      	SBIW R26,1
000314 e2ee      	LDI  R30,LOW(46)
000315 93ec      	ST   X,R30
000316 cfb6      	RJMP _0x202002A
                 _0x202002C:
000317 85e8      	LDD  R30,Y+8
000318 85f9      	LDD  R31,Y+8+1
000319 9631      	ADIW R30,1
00031a 87e8      	STD  Y+8,R30
00031b 87f9      	STD  Y+8+1,R31
00031c 9731      	SBIW R30,1
00031d 85aa      	LDD  R26,Y+10
00031e 83a0      	STD  Z+0,R26
00031f 3030      	CPI  R19,0
000320 f42c      	BRGE _0x202002E
000321 9531      	NEG  R19
000322 85a8      	LDD  R26,Y+8
000323 85b9      	LDD  R27,Y+8+1
000324 e2ed      	LDI  R30,LOW(45)
000325 c003      	RJMP _0x2020113
                 _0x202002E:
000326 85a8      	LDD  R26,Y+8
000327 85b9      	LDD  R27,Y+8+1
000328 e2eb      	LDI  R30,LOW(43)
                 _0x2020113:
000329 93ec      	ST   X,R30
00032a 85e8      	LDD  R30,Y+8
00032b 85f9      	LDD  R31,Y+8+1
00032c 9631      	ADIW R30,1
00032d 87e8      	STD  Y+8,R30
00032e 87f9      	STD  Y+8+1,R31
00032f 9631      	ADIW R30,1
000330 87e8      	STD  Y+8,R30
000331 87f9      	STD  Y+8+1,R31
000332 9731      	SBIW R30,1
000333 01bf      	MOVW R22,R30
000334 2fa3      	MOV  R26,R19
000335 e0ea      	LDI  R30,LOW(10)
000336 d4a6      	RCALL __DIVB21
000337 5de0      	SUBI R30,-LOW(48)
000338 01db      	MOVW R26,R22
000339 93ec      	ST   X,R30
00033a 85e8      	LDD  R30,Y+8
00033b 85f9      	LDD  R31,Y+8+1
00033c 9631      	ADIW R30,1
00033d 87e8      	STD  Y+8,R30
00033e 87f9      	STD  Y+8+1,R31
00033f 9731      	SBIW R30,1
000340 01bf      	MOVW R22,R30
000341 2fa3      	MOV  R26,R19
000342 e0ea      	LDI  R30,LOW(10)
000343 d4c2      	RCALL __MODB21
000344 5de0      	SUBI R30,-LOW(48)
000345 01db      	MOVW R26,R22
000346 93ec      	ST   X,R30
000347 85a8      	LDD  R26,Y+8
000348 85b9      	LDD  R27,Y+8+1
000349 e0e0      	LDI  R30,LOW(0)
00034a 93ec      	ST   X,R30
                 _0x20C0005:
00034b d467      	RCALL __LOADLOCR4
00034c 9660      	ADIW R28,16
00034d 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
00034e 93ba      	ST   -Y,R27
00034f 93aa      	ST   -Y,R26
000350 97ef      	SBIW R28,63
000351 9761      	SBIW R28,17
000352 d457      	RCALL __SAVELOCR6
000353 e010      	LDI  R17,0
                +
000354 01fe     +MOVW R30 , R28
000355 5ae8     +SUBI R30 , LOW ( - 88 )
000356 4fff     +SBCI R31 , HIGH ( - 88 )
000357 d4d9     +RCALL __GETW1Z
                 	__GETW1SX 88
000358 87e8      	STD  Y+8,R30
000359 87f9      	STD  Y+8+1,R31
                +
00035a 01fe     +MOVW R30 , R28
00035b 5aea     +SUBI R30 , LOW ( - 86 )
00035c 4fff     +SBCI R31 , HIGH ( - 86 )
00035d d4d3     +RCALL __GETW1Z
                 	__GETW1SX 86
00035e 83ee      	STD  Y+6,R30
00035f 83ff      	STD  Y+6+1,R31
000360 81ae      	LDD  R26,Y+6
000361 81bf      	LDD  R27,Y+6+1
000362 e0e0      	LDI  R30,LOW(0)
000363 e0f0      	LDI  R31,HIGH(0)
000364 93ed      	ST   X+,R30
000365 93fc      	ST   X,R31
                 _0x2020030:
000366 01de      	MOVW R26,R28
000367 5aa4      	SUBI R26,LOW(-(92))
000368 4fbf      	SBCI R27,HIGH(-(92))
000369 91ed      	LD   R30,X+
00036a 91fd      	LD   R31,X+
00036b 9631      	ADIW R30,1
00036c 93fe      	ST   -X,R31
00036d 93ee      	ST   -X,R30
00036e 9731      	SBIW R30,1
00036f 91e4      	LPM  R30,Z
000370 2f2e      	MOV  R18,R30
000371 30e0      	CPI  R30,0
000372 f409      	BRNE PC+2
000373 c286      	RJMP _0x2020032
000374 2fe1      	MOV  R30,R17
000375 30e0      	CPI  R30,0
000376 f459      	BRNE _0x2020036
000377 3225      	CPI  R18,37
000378 f411      	BRNE _0x2020037
000379 e011      	LDI  R17,LOW(1)
00037a c006      	RJMP _0x2020038
                 _0x2020037:
00037b 932a      	ST   -Y,R18
00037c 81af      	LDD  R26,Y+7
00037d 85b8      	LDD  R27,Y+7+1
00037e 85e9      	LDD  R30,Y+9
00037f 85fa      	LDD  R31,Y+9+1
000380 9509      	ICALL
                 _0x2020038:
000381 c277      	RJMP _0x2020035
                 _0x2020036:
000382 30e1      	CPI  R30,LOW(0x1)
000383 f4e1      	BRNE _0x2020039
000384 3225      	CPI  R18,37
000385 f439      	BRNE _0x202003A
000386 932a      	ST   -Y,R18
000387 81af      	LDD  R26,Y+7
000388 85b8      	LDD  R27,Y+7+1
000389 85e9      	LDD  R30,Y+9
00038a 85fa      	LDD  R31,Y+9+1
00038b 9509      	ICALL
00038c c26b      	RJMP _0x2020114
                 _0x202003A:
00038d e012      	LDI  R17,LOW(2)
00038e e0e0      	LDI  R30,LOW(0)
00038f 8bed      	STD  Y+21,R30
000390 e000      	LDI  R16,LOW(0)
000391 322d      	CPI  R18,45
000392 f411      	BRNE _0x202003B
000393 e001      	LDI  R16,LOW(1)
000394 c264      	RJMP _0x2020035
                 _0x202003B:
000395 322b      	CPI  R18,43
000396 f419      	BRNE _0x202003C
000397 e2eb      	LDI  R30,LOW(43)
000398 8bed      	STD  Y+21,R30
000399 c25f      	RJMP _0x2020035
                 _0x202003C:
00039a 3220      	CPI  R18,32
00039b f419      	BRNE _0x202003D
00039c e2e0      	LDI  R30,LOW(32)
00039d 8bed      	STD  Y+21,R30
00039e c25a      	RJMP _0x2020035
                 _0x202003D:
00039f c002      	RJMP _0x202003E
                 _0x2020039:
0003a0 30e2      	CPI  R30,LOW(0x2)
0003a1 f439      	BRNE _0x202003F
                 _0x202003E:
0003a2 e050      	LDI  R21,LOW(0)
0003a3 e013      	LDI  R17,LOW(3)
0003a4 3320      	CPI  R18,48
0003a5 f411      	BRNE _0x2020040
0003a6 6800      	ORI  R16,LOW(128)
0003a7 c251      	RJMP _0x2020035
                 _0x2020040:
0003a8 c002      	RJMP _0x2020041
                 _0x202003F:
0003a9 30e3      	CPI  R30,LOW(0x3)
0003aa f491      	BRNE _0x2020042
                 _0x2020041:
0003ab 3320      	CPI  R18,48
0003ac f010      	BRLO _0x2020044
0003ad 332a      	CPI  R18,58
0003ae f008      	BRLO _0x2020045
                 _0x2020044:
0003af c007      	RJMP _0x2020043
                 _0x2020045:
0003b0 e0aa      	LDI  R26,LOW(10)
0003b1 9f5a      	MUL  R21,R26
0003b2 2d50      	MOV  R21,R0
0003b3 2fe2      	MOV  R30,R18
0003b4 53e0      	SUBI R30,LOW(48)
0003b5 0f5e      	ADD  R21,R30
0003b6 c242      	RJMP _0x2020035
                 _0x2020043:
0003b7 e040      	LDI  R20,LOW(0)
0003b8 322e      	CPI  R18,46
0003b9 f411      	BRNE _0x2020046
0003ba e014      	LDI  R17,LOW(4)
0003bb c23d      	RJMP _0x2020035
                 _0x2020046:
0003bc c00f      	RJMP _0x2020047
                 _0x2020042:
0003bd 30e4      	CPI  R30,LOW(0x4)
0003be f499      	BRNE _0x2020049
0003bf 3320      	CPI  R18,48
0003c0 f010      	BRLO _0x202004B
0003c1 332a      	CPI  R18,58
0003c2 f008      	BRLO _0x202004C
                 _0x202004B:
0003c3 c008      	RJMP _0x202004A
                 _0x202004C:
0003c4 6200      	ORI  R16,LOW(32)
0003c5 e0aa      	LDI  R26,LOW(10)
0003c6 9f4a      	MUL  R20,R26
0003c7 2d40      	MOV  R20,R0
0003c8 2fe2      	MOV  R30,R18
0003c9 53e0      	SUBI R30,LOW(48)
0003ca 0f4e      	ADD  R20,R30
0003cb c22d      	RJMP _0x2020035
                 _0x202004A:
                 _0x2020047:
0003cc 362c      	CPI  R18,108
0003cd f419      	BRNE _0x202004D
0003ce 6002      	ORI  R16,LOW(2)
0003cf e015      	LDI  R17,LOW(5)
0003d0 c228      	RJMP _0x2020035
                 _0x202004D:
0003d1 c003      	RJMP _0x202004E
                 _0x2020049:
0003d2 30e5      	CPI  R30,LOW(0x5)
0003d3 f009      	BREQ PC+2
0003d4 c224      	RJMP _0x2020035
                 _0x202004E:
0003d5 2fe2      	MOV  R30,R18
0003d6 36e3      	CPI  R30,LOW(0x63)
0003d7 f491      	BRNE _0x2020053
                +
0003d8 01fe     +MOVW R30 , R28
0003d9 5ae6     +SUBI R30 , LOW ( - 90 )
0003da 4fff     +SBCI R31 , HIGH ( - 90 )
0003db d455     +RCALL __GETW1Z
                 	__GETW1SX 90
0003dc 9734      	SBIW R30,4
                +
0003dd 01de     +MOVW R26 , R28
0003de 5aa6     +SUBI R26 , LOW ( - 90 )
0003df 4fbf     +SBCI R27 , HIGH ( - 90 )
0003e0 93ed     +ST X + , R30
0003e1 93fc     +ST X , R31
                 	__PUTW1SX 90
0003e2 81a4      	LDD  R26,Z+4
0003e3 93aa      	ST   -Y,R26
0003e4 81af      	LDD  R26,Y+7
0003e5 85b8      	LDD  R27,Y+7+1
0003e6 85e9      	LDD  R30,Y+9
0003e7 85fa      	LDD  R31,Y+9+1
0003e8 9509      	ICALL
0003e9 c20e      	RJMP _0x2020054
                 _0x2020053:
0003ea 34e5      	CPI  R30,LOW(0x45)
0003eb f011      	BREQ _0x2020057
0003ec 36e5      	CPI  R30,LOW(0x65)
0003ed f409      	BRNE _0x2020058
                 _0x2020057:
0003ee c003      	RJMP _0x2020059
                 _0x2020058:
0003ef 36e6      	CPI  R30,LOW(0x66)
0003f0 f009      	BREQ PC+2
0003f1 c05e      	RJMP _0x202005A
                 _0x2020059:
0003f2 01fe      	MOVW R30,R28
0003f3 9676      	ADIW R30,22
0003f4 87ee      	STD  Y+14,R30
0003f5 87ff      	STD  Y+14+1,R31
                +
0003f6 01de     +MOVW R26 , R28
0003f7 5aa6     +SUBI R26 , LOW ( - 90 )
0003f8 4fbf     +SBCI R27 , HIGH ( - 90 )
0003f9 d43d     +RCALL __GETW2X
                 	__GETW2SX 90
0003fa d431      	RCALL __GETD1P_INC
                +
0003fb 87ea     +STD Y + 10 , R30
0003fc 87fb     +STD Y + 10 + 1 , R31
0003fd 876c     +STD Y + 10 + 2 , R22
0003fe 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
                +
0003ff 01fe     +MOVW R30 , R28
000400 5ae6     +SUBI R30 , LOW ( - 90 )
000401 4fff     +SBCI R31 , HIGH ( - 90 )
000402 d42e     +RCALL __GETW1Z
                 	__GETW1SX 90
000403 9734      	SBIW R30,4
                +
000404 01de     +MOVW R26 , R28
000405 5aa6     +SUBI R26 , LOW ( - 90 )
000406 4fbf     +SBCI R27 , HIGH ( - 90 )
000407 93ed     +ST X + , R30
000408 93fc     +ST X , R31
                 	__PUTW1SX 90
000409 85ad      	LDD  R26,Y+13
00040a 23aa      	TST  R26
00040b f032      	BRMI _0x202005B
00040c 89ad      	LDD  R26,Y+21
00040d 32ab      	CPI  R26,LOW(0x2B)
00040e f071      	BREQ _0x202005D
00040f 32a0      	CPI  R26,LOW(0x20)
000410 f0b1      	BREQ _0x202005F
000411 c01d      	RJMP _0x2020060
                 _0x202005B:
                +
000412 85ea     +LDD R30 , Y + 10
000413 85fb     +LDD R31 , Y + 10 + 1
000414 856c     +LDD R22 , Y + 10 + 2
000415 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000416 d450      	RCALL __ANEGF1
                +
000417 87ea     +STD Y + 10 , R30
000418 87fb     +STD Y + 10 + 1 , R31
000419 876c     +STD Y + 10 + 2 , R22
00041a 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00041b e2ed      	LDI  R30,LOW(45)
00041c 8bed      	STD  Y+21,R30
                 _0x202005D:
00041d ff07      	SBRS R16,7
00041e c008      	RJMP _0x2020061
00041f 89ed      	LDD  R30,Y+21
000420 93ea      	ST   -Y,R30
000421 81af      	LDD  R26,Y+7
000422 85b8      	LDD  R27,Y+7+1
000423 85e9      	LDD  R30,Y+9
000424 85fa      	LDD  R31,Y+9+1
000425 9509      	ICALL
000426 c008      	RJMP _0x2020062
                 _0x2020061:
                 _0x202005F:
000427 85ee      	LDD  R30,Y+14
000428 85ff      	LDD  R31,Y+14+1
000429 9631      	ADIW R30,1
00042a 87ee      	STD  Y+14,R30
00042b 87ff      	STD  Y+14+1,R31
00042c 9731      	SBIW R30,1
00042d 89ad      	LDD  R26,Y+21
00042e 83a0      	STD  Z+0,R26
                 _0x2020062:
                 _0x2020060:
00042f ff05      	SBRS R16,5
000430 e046      	LDI  R20,LOW(6)
000431 3626      	CPI  R18,102
000432 f451      	BRNE _0x2020064
                +
000433 85ea     +LDD R30 , Y + 10
000434 85fb     +LDD R31 , Y + 10 + 1
000435 856c     +LDD R22 , Y + 10 + 2
000436 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000437 d414      	RCALL __PUTPARD1
000438 934a      	ST   -Y,R20
000439 89ab      	LDD  R26,Y+19
00043a 89bc      	LDD  R27,Y+19+1
00043b d261      	RCALL _ftoa
00043c c00a      	RJMP _0x2020065
                 _0x2020064:
                +
00043d 85ea     +LDD R30 , Y + 10
00043e 85fb     +LDD R31 , Y + 10 + 1
00043f 856c     +LDD R22 , Y + 10 + 2
000440 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000441 d40a      	RCALL __PUTPARD1
000442 934a      	ST   -Y,R20
000443 932a      	ST   -Y,R18
000444 89ac      	LDD  R26,Y+20
000445 89bd      	LDD  R27,Y+20+1
000446 ddc0      	RCALL __ftoe_G101
                 _0x2020065:
000447 01fe      	MOVW R30,R28
000448 9676      	ADIW R30,22
000449 87ee      	STD  Y+14,R30
00044a 87ff      	STD  Y+14+1,R31
00044b 85ae      	LDD  R26,Y+14
00044c 85bf      	LDD  R27,Y+14+1
00044d d1f6      	RCALL _strlen
00044e 2f1e      	MOV  R17,R30
00044f c03b      	RJMP _0x2020066
                 _0x202005A:
000450 37e3      	CPI  R30,LOW(0x73)
000451 f4c1      	BRNE _0x2020068
                +
000452 01fe     +MOVW R30 , R28
000453 5ae6     +SUBI R30 , LOW ( - 90 )
000454 4fff     +SBCI R31 , HIGH ( - 90 )
000455 d3db     +RCALL __GETW1Z
                 	__GETW1SX 90
000456 9734      	SBIW R30,4
                +
000457 01de     +MOVW R26 , R28
000458 5aa6     +SUBI R26 , LOW ( - 90 )
000459 4fbf     +SBCI R27 , HIGH ( - 90 )
00045a 93ed     +ST X + , R30
00045b 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
00045c 01de     +MOVW R26 , R28
00045d 5aa6     +SUBI R26 , LOW ( - 90 )
00045e 4fbf     +SBCI R27 , HIGH ( - 90 )
00045f d3d7     +RCALL __GETW2X
                 	__GETW2SX 90
000460 9614      	ADIW R26,4
000461 91ed      	LD   R30,X+
000462 91fd      	LD   R31,X+
000463 87ee      	STD  Y+14,R30
000464 87ff      	STD  Y+14+1,R31
000465 85ae      	LDD  R26,Y+14
000466 85bf      	LDD  R27,Y+14+1
000467 d1dc      	RCALL _strlen
000468 2f1e      	MOV  R17,R30
000469 c01a      	RJMP _0x2020069
                 _0x2020068:
00046a 37e0      	CPI  R30,LOW(0x70)
00046b f521      	BRNE _0x202006B
                +
00046c 01fe     +MOVW R30 , R28
00046d 5ae6     +SUBI R30 , LOW ( - 90 )
00046e 4fff     +SBCI R31 , HIGH ( - 90 )
00046f d3c1     +RCALL __GETW1Z
                 	__GETW1SX 90
000470 9734      	SBIW R30,4
                +
000471 01de     +MOVW R26 , R28
000472 5aa6     +SUBI R26 , LOW ( - 90 )
000473 4fbf     +SBCI R27 , HIGH ( - 90 )
000474 93ed     +ST X + , R30
000475 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
000476 01de     +MOVW R26 , R28
000477 5aa6     +SUBI R26 , LOW ( - 90 )
000478 4fbf     +SBCI R27 , HIGH ( - 90 )
000479 d3bd     +RCALL __GETW2X
                 	__GETW2SX 90
00047a 9614      	ADIW R26,4
00047b 91ed      	LD   R30,X+
00047c 91fd      	LD   R31,X+
00047d 87ee      	STD  Y+14,R30
00047e 87ff      	STD  Y+14+1,R31
00047f 85ae      	LDD  R26,Y+14
000480 85bf      	LDD  R27,Y+14+1
000481 d1ce      	RCALL _strlenf
000482 2f1e      	MOV  R17,R30
000483 6008      	ORI  R16,LOW(8)
                 _0x2020069:
000484 770f      	ANDI R16,LOW(127)
000485 3040      	CPI  R20,0
000486 f011      	BREQ _0x202006D
000487 1741      	CP   R20,R17
000488 f008      	BRLO _0x202006E
                 _0x202006D:
000489 c001      	RJMP _0x202006C
                 _0x202006E:
00048a 2f14      	MOV  R17,R20
                 _0x202006C:
                 _0x2020066:
00048b e040      	LDI  R20,LOW(0)
00048c e0e0      	LDI  R30,LOW(0)
00048d 8bec      	STD  Y+20,R30
00048e e030      	LDI  R19,LOW(0)
00048f c098      	RJMP _0x202006F
                 _0x202006B:
000490 36e4      	CPI  R30,LOW(0x64)
000491 f011      	BREQ _0x2020072
000492 36e9      	CPI  R30,LOW(0x69)
000493 f411      	BRNE _0x2020073
                 _0x2020072:
000494 6004      	ORI  R16,LOW(4)
000495 c002      	RJMP _0x2020074
                 _0x2020073:
000496 37e5      	CPI  R30,LOW(0x75)
000497 f4c1      	BRNE _0x2020075
                 _0x2020074:
000498 e0ea      	LDI  R30,LOW(10)
000499 8bec      	STD  Y+20,R30
00049a ff01      	SBRS R16,1
00049b c00a      	RJMP _0x2020076
                +
00049c e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
00049d ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
00049e e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
00049f e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
                +
0004a0 8be8     +STD Y + 16 , R30
0004a1 8bf9     +STD Y + 16 + 1 , R31
0004a2 8b6a     +STD Y + 16 + 2 , R22
0004a3 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0004a4 e01a      	LDI  R17,LOW(10)
0004a5 c028      	RJMP _0x2020077
                 _0x2020076:
                +
0004a6 e1e0     +LDI R30 , LOW ( 0x2710 )
0004a7 e2f7     +LDI R31 , HIGH ( 0x2710 )
0004a8 e060     +LDI R22 , BYTE3 ( 0x2710 )
0004a9 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
                +
0004aa 8be8     +STD Y + 16 , R30
0004ab 8bf9     +STD Y + 16 + 1 , R31
0004ac 8b6a     +STD Y + 16 + 2 , R22
0004ad 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0004ae e015      	LDI  R17,LOW(5)
0004af c01e      	RJMP _0x2020077
                 _0x2020075:
0004b0 35e8      	CPI  R30,LOW(0x58)
0004b1 f411      	BRNE _0x2020079
0004b2 6008      	ORI  R16,LOW(8)
0004b3 c003      	RJMP _0x202007A
                 _0x2020079:
0004b4 37e8      	CPI  R30,LOW(0x78)
0004b5 f009      	BREQ PC+2
0004b6 c141      	RJMP _0x20200B8
                 _0x202007A:
0004b7 e1e0      	LDI  R30,LOW(16)
0004b8 8bec      	STD  Y+20,R30
0004b9 ff01      	SBRS R16,1
0004ba c00a      	RJMP _0x202007C
                +
0004bb e0e0     +LDI R30 , LOW ( 0x10000000 )
0004bc e0f0     +LDI R31 , HIGH ( 0x10000000 )
0004bd e060     +LDI R22 , BYTE3 ( 0x10000000 )
0004be e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
                +
0004bf 8be8     +STD Y + 16 , R30
0004c0 8bf9     +STD Y + 16 + 1 , R31
0004c1 8b6a     +STD Y + 16 + 2 , R22
0004c2 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0004c3 e018      	LDI  R17,LOW(8)
0004c4 c009      	RJMP _0x2020077
                 _0x202007C:
                +
0004c5 e0e0     +LDI R30 , LOW ( 0x1000 )
0004c6 e1f0     +LDI R31 , HIGH ( 0x1000 )
0004c7 e060     +LDI R22 , BYTE3 ( 0x1000 )
0004c8 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
                +
0004c9 8be8     +STD Y + 16 , R30
0004ca 8bf9     +STD Y + 16 + 1 , R31
0004cb 8b6a     +STD Y + 16 + 2 , R22
0004cc 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0004cd e014      	LDI  R17,LOW(4)
                 _0x2020077:
0004ce 3040      	CPI  R20,0
0004cf f011      	BREQ _0x202007D
0004d0 770f      	ANDI R16,LOW(127)
0004d1 c001      	RJMP _0x202007E
                 _0x202007D:
0004d2 e041      	LDI  R20,LOW(1)
                 _0x202007E:
0004d3 ff01      	SBRS R16,1
0004d4 c011      	RJMP _0x202007F
                +
0004d5 01fe     +MOVW R30 , R28
0004d6 5ae6     +SUBI R30 , LOW ( - 90 )
0004d7 4fff     +SBCI R31 , HIGH ( - 90 )
0004d8 d358     +RCALL __GETW1Z
                 	__GETW1SX 90
0004d9 9734      	SBIW R30,4
                +
0004da 01de     +MOVW R26 , R28
0004db 5aa6     +SUBI R26 , LOW ( - 90 )
0004dc 4fbf     +SBCI R27 , HIGH ( - 90 )
0004dd 93ed     +ST X + , R30
0004de 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
0004df 01de     +MOVW R26 , R28
0004e0 5aa6     +SUBI R26 , LOW ( - 90 )
0004e1 4fbf     +SBCI R27 , HIGH ( - 90 )
0004e2 d354     +RCALL __GETW2X
                 	__GETW2SX 90
0004e3 9614      	ADIW R26,4
0004e4 d341      	RCALL __GETD1P
0004e5 c026      	RJMP _0x2020115
                 _0x202007F:
0004e6 ff02      	SBRS R16,2
0004e7 c012      	RJMP _0x2020081
                +
0004e8 01fe     +MOVW R30 , R28
0004e9 5ae6     +SUBI R30 , LOW ( - 90 )
0004ea 4fff     +SBCI R31 , HIGH ( - 90 )
0004eb d345     +RCALL __GETW1Z
                 	__GETW1SX 90
0004ec 9734      	SBIW R30,4
                +
0004ed 01de     +MOVW R26 , R28
0004ee 5aa6     +SUBI R26 , LOW ( - 90 )
0004ef 4fbf     +SBCI R27 , HIGH ( - 90 )
0004f0 93ed     +ST X + , R30
0004f1 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
0004f2 01de     +MOVW R26 , R28
0004f3 5aa6     +SUBI R26 , LOW ( - 90 )
0004f4 4fbf     +SBCI R27 , HIGH ( - 90 )
0004f5 d341     +RCALL __GETW2X
                 	__GETW2SX 90
0004f6 9614      	ADIW R26,4
0004f7 d32a      	RCALL __GETW1P
0004f8 d2d1      	RCALL __CWD1
0004f9 c012      	RJMP _0x2020115
                 _0x2020081:
                +
0004fa 01fe     +MOVW R30 , R28
0004fb 5ae6     +SUBI R30 , LOW ( - 90 )
0004fc 4fff     +SBCI R31 , HIGH ( - 90 )
0004fd d333     +RCALL __GETW1Z
                 	__GETW1SX 90
0004fe 9734      	SBIW R30,4
                +
0004ff 01de     +MOVW R26 , R28
000500 5aa6     +SUBI R26 , LOW ( - 90 )
000501 4fbf     +SBCI R27 , HIGH ( - 90 )
000502 93ed     +ST X + , R30
000503 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
000504 01de     +MOVW R26 , R28
000505 5aa6     +SUBI R26 , LOW ( - 90 )
000506 4fbf     +SBCI R27 , HIGH ( - 90 )
000507 d32f     +RCALL __GETW2X
                 	__GETW2SX 90
000508 9614      	ADIW R26,4
000509 d318      	RCALL __GETW1P
00050a 2766      	CLR  R22
00050b 2777      	CLR  R23
                 _0x2020115:
                +
00050c 87ea     +STD Y + 10 , R30
00050d 87fb     +STD Y + 10 + 1 , R31
00050e 876c     +STD Y + 10 + 2 , R22
00050f 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000510 ff02      	SBRS R16,2
000511 c015      	RJMP _0x2020083
000512 85ad      	LDD  R26,Y+13
000513 23aa      	TST  R26
000514 f45a      	BRPL _0x2020084
                +
000515 85ea     +LDD R30 , Y + 10
000516 85fb     +LDD R31 , Y + 10 + 1
000517 856c     +LDD R22 , Y + 10 + 2
000518 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000519 d2a2      	RCALL __ANEGD1
                +
00051a 87ea     +STD Y + 10 , R30
00051b 87fb     +STD Y + 10 + 1 , R31
00051c 876c     +STD Y + 10 + 2 , R22
00051d 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00051e e2ed      	LDI  R30,LOW(45)
00051f 8bed      	STD  Y+21,R30
                 _0x2020084:
000520 89ed      	LDD  R30,Y+21
000521 30e0      	CPI  R30,0
000522 f019      	BREQ _0x2020085
000523 5f1f      	SUBI R17,-LOW(1)
000524 5f4f      	SUBI R20,-LOW(1)
000525 c001      	RJMP _0x2020086
                 _0x2020085:
000526 7f0b      	ANDI R16,LOW(251)
                 _0x2020086:
                 _0x2020083:
000527 2f34      	MOV  R19,R20
                 _0x202006F:
000528 fd00      	SBRC R16,0
000529 c018      	RJMP _0x2020087
                 _0x2020088:
00052a 1715      	CP   R17,R21
00052b f410      	BRSH _0x202008B
00052c 1735      	CP   R19,R21
00052d f008      	BRLO _0x202008C
                 _0x202008B:
00052e c013      	RJMP _0x202008A
                 _0x202008C:
00052f ff07      	SBRS R16,7
000530 c008      	RJMP _0x202008D
000531 ff02      	SBRS R16,2
000532 c004      	RJMP _0x202008E
000533 7f0b      	ANDI R16,LOW(251)
000534 892d      	LDD  R18,Y+21
000535 5011      	SUBI R17,LOW(1)
000536 c001      	RJMP _0x202008F
                 _0x202008E:
000537 e320      	LDI  R18,LOW(48)
                 _0x202008F:
000538 c001      	RJMP _0x2020090
                 _0x202008D:
000539 e220      	LDI  R18,LOW(32)
                 _0x2020090:
00053a 932a      	ST   -Y,R18
00053b 81af      	LDD  R26,Y+7
00053c 85b8      	LDD  R27,Y+7+1
00053d 85e9      	LDD  R30,Y+9
00053e 85fa      	LDD  R31,Y+9+1
00053f 9509      	ICALL
000540 5051      	SUBI R21,LOW(1)
000541 cfe8      	RJMP _0x2020088
                 _0x202008A:
                 _0x2020087:
                 _0x2020091:
000542 1714      	CP   R17,R20
000543 f500      	BRSH _0x2020093
000544 6100      	ORI  R16,LOW(16)
000545 ff02      	SBRS R16,2
000546 c011      	RJMP _0x2020094
000547 7f0b      	ANDI R16,LOW(251)
000548 89ed      	LDD  R30,Y+21
000549 93ea      	ST   -Y,R30
                +
00054a 01de     +MOVW R26 , R28
00054b 5aa9     +SUBI R26 , LOW ( - 87 )
00054c 4fbf     +SBCI R27 , HIGH ( - 87 )
00054d d2e9     +RCALL __GETW2X
                 	__GETW2SX 87
                +
00054e 01fe     +MOVW R30 , R28
00054f 5ae7     +SUBI R30 , LOW ( - 89 )
000550 4fff     +SBCI R31 , HIGH ( - 89 )
000551 d2df     +RCALL __GETW1Z
                 	__GETW1SX 89
000552 9509      	ICALL
000553 3050      	CPI  R21,0
000554 f009      	BREQ _0x2020095
000555 5051      	SUBI R21,LOW(1)
                 _0x2020095:
000556 5011      	SUBI R17,LOW(1)
000557 5041      	SUBI R20,LOW(1)
                 _0x2020094:
000558 e3e0      	LDI  R30,LOW(48)
000559 93ea      	ST   -Y,R30
00055a 81af      	LDD  R26,Y+7
00055b 85b8      	LDD  R27,Y+7+1
00055c 85e9      	LDD  R30,Y+9
00055d 85fa      	LDD  R31,Y+9+1
00055e 9509      	ICALL
00055f 3050      	CPI  R21,0
000560 f009      	BREQ _0x2020096
000561 5051      	SUBI R21,LOW(1)
                 _0x2020096:
000562 5041      	SUBI R20,LOW(1)
000563 cfde      	RJMP _0x2020091
                 _0x2020093:
000564 2f31      	MOV  R19,R17
000565 89ec      	LDD  R30,Y+20
000566 30e0      	CPI  R30,0
000567 f4d9      	BRNE _0x2020097
                 _0x2020098:
000568 3030      	CPI  R19,0
000569 f0c1      	BREQ _0x202009A
00056a ff03      	SBRS R16,3
00056b c006      	RJMP _0x202009B
00056c 85ee      	LDD  R30,Y+14
00056d 85ff      	LDD  R31,Y+14+1
00056e 9125      	LPM  R18,Z+
00056f 87ee      	STD  Y+14,R30
000570 87ff      	STD  Y+14+1,R31
000571 c005      	RJMP _0x202009C
                 _0x202009B:
000572 85ae      	LDD  R26,Y+14
000573 85bf      	LDD  R27,Y+14+1
000574 912d      	LD   R18,X+
000575 87ae      	STD  Y+14,R26
000576 87bf      	STD  Y+14+1,R27
                 _0x202009C:
000577 932a      	ST   -Y,R18
000578 81af      	LDD  R26,Y+7
000579 85b8      	LDD  R27,Y+7+1
00057a 85e9      	LDD  R30,Y+9
00057b 85fa      	LDD  R31,Y+9+1
00057c 9509      	ICALL
00057d 3050      	CPI  R21,0
00057e f009      	BREQ _0x202009D
00057f 5051      	SUBI R21,LOW(1)
                 _0x202009D:
000580 5031      	SUBI R19,LOW(1)
000581 cfe6      	RJMP _0x2020098
                 _0x202009A:
000582 c068      	RJMP _0x202009E
                 _0x2020097:
                 _0x20200A0:
                +
000583 89e8     +LDD R30 , Y + 16
000584 89f9     +LDD R31 , Y + 16 + 1
000585 896a     +LDD R22 , Y + 16 + 2
000586 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000587 85aa     +LDD R26 , Y + 10
000588 85bb     +LDD R27 , Y + 10 + 1
000589 858c     +LDD R24 , Y + 10 + 2
00058a 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
00058b d256      	RCALL __DIVD21U
00058c 2f2e      	MOV  R18,R30
00058d 302a      	CPI  R18,10
00058e f030      	BRLO _0x20200A2
00058f ff03      	SBRS R16,3
000590 c002      	RJMP _0x20200A3
000591 5c29      	SUBI R18,-LOW(55)
000592 c001      	RJMP _0x20200A4
                 _0x20200A3:
000593 5a29      	SUBI R18,-LOW(87)
                 _0x20200A4:
000594 c001      	RJMP _0x20200A5
                 _0x20200A2:
000595 5d20      	SUBI R18,-LOW(48)
                 _0x20200A5:
000596 fd04      	SBRC R16,4
000597 c02c      	RJMP _0x20200A7
000598 3321      	CPI  R18,49
000599 f460      	BRSH _0x20200A9
                +
00059a 89a8     +LDD R26 , Y + 16
00059b 89b9     +LDD R27 , Y + 16 + 1
00059c 898a     +LDD R24 , Y + 16 + 2
00059d 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
00059e 30a1     +CPI R26 , LOW ( 0x1 )
00059f e0e0     +LDI R30 , HIGH ( 0x1 )
0005a0 07be     +CPC R27 , R30
0005a1 e0e0     +LDI R30 , BYTE3 ( 0x1 )
0005a2 078e     +CPC R24 , R30
0005a3 e0e0     +LDI R30 , BYTE4 ( 0x1 )
0005a4 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0005a5 f409      	BRNE _0x20200A8
                 _0x20200A9:
0005a6 c00b      	RJMP _0x20200AB
                 _0x20200A8:
0005a7 1743      	CP   R20,R19
0005a8 f440      	BRSH _0x2020116
0005a9 1753      	CP   R21,R19
0005aa f010      	BRLO _0x20200AE
0005ab ff00      	SBRS R16,0
0005ac c001      	RJMP _0x20200AF
                 _0x20200AE:
0005ad c01f      	RJMP _0x20200AD
                 _0x20200AF:
0005ae e220      	LDI  R18,LOW(32)
0005af ff07      	SBRS R16,7
0005b0 c013      	RJMP _0x20200B0
                 _0x2020116:
0005b1 e320      	LDI  R18,LOW(48)
                 _0x20200AB:
0005b2 6100      	ORI  R16,LOW(16)
0005b3 ff02      	SBRS R16,2
0005b4 c00f      	RJMP _0x20200B1
0005b5 7f0b      	ANDI R16,LOW(251)
0005b6 89ed      	LDD  R30,Y+21
0005b7 93ea      	ST   -Y,R30
                +
0005b8 01de     +MOVW R26 , R28
0005b9 5aa9     +SUBI R26 , LOW ( - 87 )
0005ba 4fbf     +SBCI R27 , HIGH ( - 87 )
0005bb d27b     +RCALL __GETW2X
                 	__GETW2SX 87
                +
0005bc 01fe     +MOVW R30 , R28
0005bd 5ae7     +SUBI R30 , LOW ( - 89 )
0005be 4fff     +SBCI R31 , HIGH ( - 89 )
0005bf d271     +RCALL __GETW1Z
                 	__GETW1SX 89
0005c0 9509      	ICALL
0005c1 3050      	CPI  R21,0
0005c2 f009      	BREQ _0x20200B2
0005c3 5051      	SUBI R21,LOW(1)
                 _0x20200B2:
                 _0x20200B1:
                 _0x20200B0:
                 _0x20200A7:
0005c4 932a      	ST   -Y,R18
0005c5 81af      	LDD  R26,Y+7
0005c6 85b8      	LDD  R27,Y+7+1
0005c7 85e9      	LDD  R30,Y+9
0005c8 85fa      	LDD  R31,Y+9+1
0005c9 9509      	ICALL
0005ca 3050      	CPI  R21,0
0005cb f009      	BREQ _0x20200B3
0005cc 5051      	SUBI R21,LOW(1)
                 _0x20200B3:
                 _0x20200AD:
0005cd 5031      	SUBI R19,LOW(1)
                +
0005ce 89e8     +LDD R30 , Y + 16
0005cf 89f9     +LDD R31 , Y + 16 + 1
0005d0 896a     +LDD R22 , Y + 16 + 2
0005d1 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
0005d2 85aa     +LDD R26 , Y + 10
0005d3 85bb     +LDD R27 , Y + 10 + 1
0005d4 858c     +LDD R24 , Y + 10 + 2
0005d5 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
0005d6 d23b      	RCALL __MODD21U
                +
0005d7 87ea     +STD Y + 10 , R30
0005d8 87fb     +STD Y + 10 + 1 , R31
0005d9 876c     +STD Y + 10 + 2 , R22
0005da 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0005db 89ec      	LDD  R30,Y+20
                +
0005dc 89a8     +LDD R26 , Y + 16
0005dd 89b9     +LDD R27 , Y + 16 + 1
0005de 898a     +LDD R24 , Y + 16 + 2
0005df 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
0005e0 27ff      	CLR  R31
0005e1 2766      	CLR  R22
0005e2 2777      	CLR  R23
0005e3 d1fe      	RCALL __DIVD21U
                +
0005e4 8be8     +STD Y + 16 , R30
0005e5 8bf9     +STD Y + 16 + 1 , R31
0005e6 8b6a     +STD Y + 16 + 2 , R22
0005e7 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0005e8 d27a      	RCALL __CPD10
0005e9 f009      	BREQ _0x20200A1
0005ea cf98      	RJMP _0x20200A0
                 _0x20200A1:
                 _0x202009E:
0005eb ff00      	SBRS R16,0
0005ec c00b      	RJMP _0x20200B4
                 _0x20200B5:
0005ed 3050      	CPI  R21,0
0005ee f049      	BREQ _0x20200B7
0005ef 5051      	SUBI R21,LOW(1)
0005f0 e2e0      	LDI  R30,LOW(32)
0005f1 93ea      	ST   -Y,R30
0005f2 81af      	LDD  R26,Y+7
0005f3 85b8      	LDD  R27,Y+7+1
0005f4 85e9      	LDD  R30,Y+9
0005f5 85fa      	LDD  R31,Y+9+1
0005f6 9509      	ICALL
0005f7 cff5      	RJMP _0x20200B5
                 _0x20200B7:
                 _0x20200B4:
                 _0x20200B8:
                 _0x2020054:
                 _0x2020114:
0005f8 e010      	LDI  R17,LOW(0)
                 _0x2020035:
0005f9 cd6c      	RJMP _0x2020030
                 _0x2020032:
0005fa 81ae      	LDD  R26,Y+6
0005fb 81bf      	LDD  R27,Y+6+1
0005fc 91ed      	LD   R30,X+
0005fd 91fd      	LD   R31,X+
0005fe d1b2      	RCALL __LOADLOCR6
0005ff 96ef      	ADIW R28,63
000600 966f      	ADIW R28,31
000601 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000602 92ff      	PUSH R15
000603 2ef8      	MOV  R15,R24
000604 9726      	SBIW R28,6
000605 d1a6      	RCALL __SAVELOCR4
000606 01de      	MOVW R26,R28
000607 961c      	ADIW R26,12
000608 d1af      	RCALL __ADDW2R15
000609 d218      	RCALL __GETW1P
00060a 9730      	SBIW R30,0
00060b f419      	BRNE _0x20200B9
00060c efef      	LDI  R30,LOW(65535)
00060d efff      	LDI  R31,HIGH(65535)
00060e c024      	RJMP _0x20C0004
                 _0x20200B9:
00060f 01de      	MOVW R26,R28
000610 9616      	ADIW R26,6
000611 d1a6      	RCALL __ADDW2R15
000612 018d      	MOVW R16,R26
000613 01de      	MOVW R26,R28
000614 961c      	ADIW R26,12
000615 d1a2      	RCALL __ADDW2R15
000616 91ed      	LD   R30,X+
000617 91fd      	LD   R31,X+
000618 83ee      	STD  Y+6,R30
000619 83ff      	STD  Y+6+1,R31
00061a e0e0      	LDI  R30,LOW(0)
00061b 87e8      	STD  Y+8,R30
00061c 87e9      	STD  Y+8+1,R30
00061d 01de      	MOVW R26,R28
00061e 961a      	ADIW R26,10
00061f d198      	RCALL __ADDW2R15
000620 91ed      	LD   R30,X+
000621 91fd      	LD   R31,X+
000622 93fa      	ST   -Y,R31
000623 93ea      	ST   -Y,R30
000624 931a      	ST   -Y,R17
000625 930a      	ST   -Y,R16
000626 ecec      	LDI  R30,LOW(_put_buff_G101)
000627 e0f1      	LDI  R31,HIGH(_put_buff_G101)
000628 93fa      	ST   -Y,R31
000629 93ea      	ST   -Y,R30
00062a 01de      	MOVW R26,R28
00062b 961a      	ADIW R26,10
00062c dd21      	RCALL __print_G101
00062d 019f      	MOVW R18,R30
00062e 81ae      	LDD  R26,Y+6
00062f 81bf      	LDD  R27,Y+6+1
000630 e0e0      	LDI  R30,LOW(0)
000631 93ec      	ST   X,R30
000632 01f9      	MOVW R30,R18
                 _0x20C0004:
000633 d17f      	RCALL __LOADLOCR4
000634 962a      	ADIW R28,10
000635 90ff      	POP  R15
000636 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
000637 93ba      	ST   -Y,R27
000638 93aa      	ST   -Y,R26
000639 91e9          ld   r30,y+
00063a 91f9          ld   r31,y+
00063b 91a9          ld   r26,y+
00063c 91b9          ld   r27,y+
00063d 01cd          movw r24,r26
                 strcpyf0:
00063e 9005      	lpm  r0,z+
00063f 920d          st   x+,r0
000640 2000          tst  r0
000641 f7e1          brne strcpyf0
000642 01fc          movw r30,r24
000643 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000644 93ba      	ST   -Y,R27
000645 93aa      	ST   -Y,R26
000646 91a9          ld   r26,y+
000647 91b9          ld   r27,y+
000648 27ee          clr  r30
000649 27ff          clr  r31
                 strlen0:
00064a 916d          ld   r22,x+
00064b 2366          tst  r22
00064c f011          breq strlen1
00064d 9631          adiw r30,1
00064e cffb          rjmp strlen0
                 strlen1:
00064f 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000650 93ba      	ST   -Y,R27
000651 93aa      	ST   -Y,R26
000652 27aa          clr  r26
000653 27bb          clr  r27
000654 91e9          ld   r30,y+
000655 91f9          ld   r31,y+
                 strlenf0:
000656 9005      	lpm  r0,z+
000657 2000          tst  r0
000658 f011          breq strlenf1
000659 9611          adiw r26,1
00065a cffb          rjmp strlenf0
                 strlenf1:
00065b 01fd          movw r30,r26
00065c 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
00065d d1f3      	RCALL __PUTPARD2
00065e 817b         ldd  r23,y+3
00065f 816a         ldd  r22,y+2
000660 81f9         ldd  r31,y+1
000661 81e8         ld   r30,y
000662 fb77         bst  r23,7
000663 0f77         lsl  r23
000664 fd67         sbrc r22,7
000665 6071         sbr  r23,1
000666 2f97         mov  r25,r23
000667 579e         subi r25,0x7e
000668 f081         breq __ftrunc0
000669 f078         brcs __ftrunc0
00066a 3198         cpi  r25,24
00066b f490         brsh __ftrunc1
00066c 27aa         clr  r26
00066d 27bb         clr  r27
00066e 2788         clr  r24
                 __ftrunc2:
00066f 9408         sec
000670 9587         ror  r24
000671 95b7         ror  r27
000672 95a7         ror  r26
000673 959a         dec  r25
000674 f7d1         brne __ftrunc2
000675 23ea         and  r30,r26
000676 23fb         and  r31,r27
000677 2368         and  r22,r24
000678 c005         rjmp __ftrunc1
                 __ftrunc0:
000679 94e8         clt
00067a 2777         clr  r23
00067b 27ee         clr  r30
00067c 27ff         clr  r31
00067d 2766         clr  r22
                 __ftrunc1:
00067e 776f         cbr  r22,0x80
00067f 9576         lsr  r23
000680 f408         brcc __ftrunc3
000681 6860         sbr  r22,0x80
                 __ftrunc3:
000682 f977         bld  r23,7
000683 91a9         ld   r26,y+
000684 91b9         ld   r27,y+
000685 9189         ld   r24,y+
000686 9199         ld   r25,y+
000687 17ea         cp   r30,r26
000688 07fb         cpc  r31,r27
000689 0768         cpc  r22,r24
00068a 0779         cpc  r23,r25
00068b fb97         bst  r25,7
00068c 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
00068d d1c3      	RCALL __PUTPARD2
00068e d1b3      	RCALL __GETD2S0
00068f dfcd      	RCALL _ftrunc
000690 d1b6      	RCALL __PUTD1S0
000691 f411          brne __floor1
                 __floor0:
000692 d1aa      	RCALL __GETD1S0
000693 c007      	RJMP _0x20C0003
                 __floor1:
000694 f7ee          brtc __floor0
000695 d1a7      	RCALL __GETD1S0
                +
000696 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000697 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000698 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000699 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00069a d26b      	RCALL __SUBF12
                 _0x20C0003:
00069b 9624      	ADIW R28,4
00069c 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
00069d 93ba      	ST   -Y,R27
00069e 93aa      	ST   -Y,R26
00069f 9724      	SBIW R28,4
0006a0 e0e0      	LDI  R30,LOW(0)
0006a1 83e8      	ST   Y,R30
0006a2 83e9      	STD  Y+1,R30
0006a3 83ea      	STD  Y+2,R30
0006a4 e3ef      	LDI  R30,LOW(63)
0006a5 83eb      	STD  Y+3,R30
0006a6 d107      	RCALL __SAVELOCR2
0006a7 85eb      	LDD  R30,Y+11
0006a8 85fc      	LDD  R31,Y+11+1
0006a9 3fef      	CPI  R30,LOW(0xFFFF)
0006aa efaf      	LDI  R26,HIGH(0xFFFF)
0006ab 07fa      	CPC  R31,R26
0006ac f441      	BRNE _0x20A000D
0006ad 81ee      	LDD  R30,Y+6
0006ae 81ff      	LDD  R31,Y+6+1
0006af 93fa      	ST   -Y,R31
0006b0 93ea      	ST   -Y,R30
                +
0006b1 e6a2     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 0 ) )
0006b2 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW2FN _0x20A0000,0
0006b3 df83      	RCALL _strcpyf
0006b4 c0f2      	RJMP _0x20C0002
                 _0x20A000D:
0006b5 3fef      	CPI  R30,LOW(0x7FFF)
0006b6 e7af      	LDI  R26,HIGH(0x7FFF)
0006b7 07fa      	CPC  R31,R26
0006b8 f441      	BRNE _0x20A000C
0006b9 81ee      	LDD  R30,Y+6
0006ba 81ff      	LDD  R31,Y+6+1
0006bb 93fa      	ST   -Y,R31
0006bc 93ea      	ST   -Y,R30
                +
0006bd e6a3     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 1 ) )
0006be e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW2FN _0x20A0000,1
0006bf df77      	RCALL _strcpyf
0006c0 c0e6      	RJMP _0x20C0002
                 _0x20A000C:
0006c1 85ac      	LDD  R26,Y+12
0006c2 23aa      	TST  R26
0006c3 f48a      	BRPL _0x20A000F
                +
0006c4 85e9     +LDD R30 , Y + 9
0006c5 85fa     +LDD R31 , Y + 9 + 1
0006c6 856b     +LDD R22 , Y + 9 + 2
0006c7 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0006c8 d19e      	RCALL __ANEGF1
                +
0006c9 87e9     +STD Y + 9 , R30
0006ca 87fa     +STD Y + 9 + 1 , R31
0006cb 876b     +STD Y + 9 + 2 , R22
0006cc 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0006cd 81ae      	LDD  R26,Y+6
0006ce 81bf      	LDD  R27,Y+6+1
0006cf 9611      	ADIW R26,1
0006d0 83ae      	STD  Y+6,R26
0006d1 83bf      	STD  Y+6+1,R27
0006d2 9711      	SBIW R26,1
0006d3 e2ed      	LDI  R30,LOW(45)
0006d4 93ec      	ST   X,R30
                 _0x20A000F:
0006d5 85a8      	LDD  R26,Y+8
0006d6 30a7      	CPI  R26,LOW(0x7)
0006d7 f010      	BRLO _0x20A0010
0006d8 e0e6      	LDI  R30,LOW(6)
0006d9 87e8      	STD  Y+8,R30
                 _0x20A0010:
0006da 8518      	LDD  R17,Y+8
                 _0x20A0011:
0006db 2fe1      	MOV  R30,R17
0006dc 5011      	SUBI R17,1
0006dd 30e0      	CPI  R30,0
0006de f071      	BREQ _0x20A0013
                +
0006df 81aa     +LDD R26 , Y + 2
0006e0 81bb     +LDD R27 , Y + 2 + 1
0006e1 818c     +LDD R24 , Y + 2 + 2
0006e2 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
0006e3 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0006e4 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0006e5 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0006e6 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0006e7 d274      	RCALL __MULF12
                +
0006e8 83ea     +STD Y + 2 , R30
0006e9 83fb     +STD Y + 2 + 1 , R31
0006ea 836c     +STD Y + 2 + 2 , R22
0006eb 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
0006ec cfee      	RJMP _0x20A0011
                 _0x20A0013:
                +
0006ed 81ea     +LDD R30 , Y + 2
0006ee 81fb     +LDD R31 , Y + 2 + 1
0006ef 816c     +LDD R22 , Y + 2 + 2
0006f0 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
0006f1 85a9     +LDD R26 , Y + 9
0006f2 85ba     +LDD R27 , Y + 9 + 1
0006f3 858b     +LDD R24 , Y + 9 + 2
0006f4 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0006f5 d217      	RCALL __ADDF12
                +
0006f6 87e9     +STD Y + 9 , R30
0006f7 87fa     +STD Y + 9 + 1 , R31
0006f8 876b     +STD Y + 9 + 2 , R22
0006f9 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0006fa e010      	LDI  R17,LOW(0)
                +
0006fb e0e0     +LDI R30 , LOW ( 0x3F800000 )
0006fc e0f0     +LDI R31 , HIGH ( 0x3F800000 )
0006fd e860     +LDI R22 , BYTE3 ( 0x3F800000 )
0006fe e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
                +
0006ff 83ea     +STD Y + 2 , R30
000700 83fb     +STD Y + 2 + 1 , R31
000701 836c     +STD Y + 2 + 2 , R22
000702 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
                 _0x20A0014:
                +
000703 81ea     +LDD R30 , Y + 2
000704 81fb     +LDD R31 , Y + 2 + 1
000705 816c     +LDD R22 , Y + 2 + 2
000706 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000707 85a9     +LDD R26 , Y + 9
000708 85ba     +LDD R27 , Y + 9 + 1
000709 858b     +LDD R24 , Y + 9 + 2
00070a 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00070b d2e2      	RCALL __CMPF12
00070c f0c8      	BRLO _0x20A0016
                +
00070d 81aa     +LDD R26 , Y + 2
00070e 81bb     +LDD R27 , Y + 2 + 1
00070f 818c     +LDD R24 , Y + 2 + 2
000710 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
000711 e0e0     +LDI R30 , LOW ( 0x41200000 )
000712 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000713 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000714 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000715 d246      	RCALL __MULF12
                +
000716 83ea     +STD Y + 2 , R30
000717 83fb     +STD Y + 2 + 1 , R31
000718 836c     +STD Y + 2 + 2 , R22
000719 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
00071a 5f1f      	SUBI R17,-LOW(1)
00071b 3217      	CPI  R17,39
00071c f040      	BRLO _0x20A0017
00071d 81ee      	LDD  R30,Y+6
00071e 81ff      	LDD  R31,Y+6+1
00071f 93fa      	ST   -Y,R31
000720 93ea      	ST   -Y,R30
                +
000721 e6a7     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 5 ) )
000722 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW2FN _0x20A0000,5
000723 df13      	RCALL _strcpyf
000724 c082      	RJMP _0x20C0002
                 _0x20A0017:
000725 cfdd      	RJMP _0x20A0014
                 _0x20A0016:
000726 3010      	CPI  R17,0
000727 f449      	BRNE _0x20A0018
000728 81ae      	LDD  R26,Y+6
000729 81bf      	LDD  R27,Y+6+1
00072a 9611      	ADIW R26,1
00072b 83ae      	STD  Y+6,R26
00072c 83bf      	STD  Y+6+1,R27
00072d 9711      	SBIW R26,1
00072e e3e0      	LDI  R30,LOW(48)
00072f 93ec      	ST   X,R30
000730 c03c      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
000731 2fe1      	MOV  R30,R17
000732 5011      	SUBI R17,1
000733 30e0      	CPI  R30,0
000734 f1c1      	BREQ _0x20A001C
                +
000735 81aa     +LDD R26 , Y + 2
000736 81bb     +LDD R27 , Y + 2 + 1
000737 818c     +LDD R24 , Y + 2 + 2
000738 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
000739 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00073a ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00073b ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00073c e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00073d d21e      	RCALL __MULF12
                +
00073e e0a0     +LDI R26 , LOW ( 0x3F000000 )
00073f e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000740 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000741 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000742 d1ca      	RCALL __ADDF12
000743 01df      	MOVW R26,R30
000744 01cb      	MOVW R24,R22
000745 df47      	RCALL _floor
                +
000746 83ea     +STD Y + 2 , R30
000747 83fb     +STD Y + 2 + 1 , R31
000748 836c     +STD Y + 2 + 2 , R22
000749 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
                +
00074a 85a9     +LDD R26 , Y + 9
00074b 85ba     +LDD R27 , Y + 9 + 1
00074c 858b     +LDD R24 , Y + 9 + 2
00074d 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00074e d25b      	RCALL __DIVF21
00074f d14a      	RCALL __CFD1U
000750 2f0e      	MOV  R16,R30
000751 81ae      	LDD  R26,Y+6
000752 81bf      	LDD  R27,Y+6+1
000753 9611      	ADIW R26,1
000754 83ae      	STD  Y+6,R26
000755 83bf      	STD  Y+6+1,R27
000756 9711      	SBIW R26,1
000757 5de0      	SUBI R30,-LOW(48)
000758 93ec      	ST   X,R30
000759 2fe0      	MOV  R30,R16
00075a e0f0      	LDI  R31,0
                +
00075b 81aa     +LDD R26 , Y + 2
00075c 81bb     +LDD R27 , Y + 2 + 1
00075d 818c     +LDD R24 , Y + 2 + 2
00075e 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00075f d06a      	RCALL __CWD1
000760 d172      	RCALL __CDF1
000761 d1fa      	RCALL __MULF12
                +
000762 85a9     +LDD R26 , Y + 9
000763 85ba     +LDD R27 , Y + 9 + 1
000764 858b     +LDD R24 , Y + 9 + 2
000765 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000766 d0ef      	RCALL __SWAPD12
000767 d19e      	RCALL __SUBF12
                +
000768 87e9     +STD Y + 9 , R30
000769 87fa     +STD Y + 9 + 1 , R31
00076a 876b     +STD Y + 9 + 2 , R22
00076b 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
00076c cfc4      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
00076d 85e8      	LDD  R30,Y+8
00076e 30e0      	CPI  R30,0
00076f f199      	BREQ _0x20C0001
000770 81ae      	LDD  R26,Y+6
000771 81bf      	LDD  R27,Y+6+1
000772 9611      	ADIW R26,1
000773 83ae      	STD  Y+6,R26
000774 83bf      	STD  Y+6+1,R27
000775 9711      	SBIW R26,1
000776 e2ee      	LDI  R30,LOW(46)
000777 93ec      	ST   X,R30
                 _0x20A001E:
000778 85e8      	LDD  R30,Y+8
000779 50e1      	SUBI R30,LOW(1)
00077a 87e8      	STD  Y+8,R30
00077b 5fef      	SUBI R30,-LOW(1)
00077c f131      	BREQ _0x20A0020
                +
00077d 85a9     +LDD R26 , Y + 9
00077e 85ba     +LDD R27 , Y + 9 + 1
00077f 858b     +LDD R24 , Y + 9 + 2
000780 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
                +
000781 e0e0     +LDI R30 , LOW ( 0x41200000 )
000782 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000783 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000784 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000785 d1d6      	RCALL __MULF12
                +
000786 87e9     +STD Y + 9 , R30
000787 87fa     +STD Y + 9 + 1 , R31
000788 876b     +STD Y + 9 + 2 , R22
000789 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
00078a d10f      	RCALL __CFD1U
00078b 2f0e      	MOV  R16,R30
00078c 81ae      	LDD  R26,Y+6
00078d 81bf      	LDD  R27,Y+6+1
00078e 9611      	ADIW R26,1
00078f 83ae      	STD  Y+6,R26
000790 83bf      	STD  Y+6+1,R27
000791 9711      	SBIW R26,1
000792 5de0      	SUBI R30,-LOW(48)
000793 93ec      	ST   X,R30
000794 2fe0      	MOV  R30,R16
000795 e0f0      	LDI  R31,0
                +
000796 85a9     +LDD R26 , Y + 9
000797 85ba     +LDD R27 , Y + 9 + 1
000798 858b     +LDD R24 , Y + 9 + 2
000799 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00079a d02f      	RCALL __CWD1
00079b d137      	RCALL __CDF1
00079c d0b9      	RCALL __SWAPD12
00079d d168      	RCALL __SUBF12
                +
00079e 87e9     +STD Y + 9 , R30
00079f 87fa     +STD Y + 9 + 1 , R31
0007a0 876b     +STD Y + 9 + 2 , R22
0007a1 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0007a2 cfd5      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20C0001:
0007a3 81ae      	LDD  R26,Y+6
0007a4 81bf      	LDD  R27,Y+6+1
0007a5 e0e0      	LDI  R30,LOW(0)
0007a6 93ec      	ST   X,R30
                 _0x20C0002:
0007a7 d00d      	RCALL __LOADLOCR2
0007a8 962d      	ADIW R28,13
0007a9 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 __base_y_G100:
0001e0           	.BYTE 0x4
                 __seed_G105:
0001e4           	.BYTE 0x4
                 
                 	.CSEG
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
0007aa 935a      	ST   -Y,R21
                 __SAVELOCR5:
0007ab 934a      	ST   -Y,R20
                 __SAVELOCR4:
0007ac 933a      	ST   -Y,R19
                 __SAVELOCR3:
0007ad 932a      	ST   -Y,R18
                 __SAVELOCR2:
0007ae 931a      	ST   -Y,R17
0007af 930a      	ST   -Y,R16
0007b0 9508      	RET
                 
                 __LOADLOCR6:
0007b1 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0007b2 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0007b3 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0007b4 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0007b5 8119      	LDD  R17,Y+1
0007b6 8108      	LD   R16,Y
0007b7 9508      	RET
                 
                 __ADDW2R15:
0007b8 2400      	CLR  R0
0007b9 0daf      	ADD  R26,R15
0007ba 1db0      	ADC  R27,R0
0007bb 9508      	RET
                 
                 __ANEGD1:
0007bc 95f0      	COM  R31
0007bd 9560      	COM  R22
0007be 9570      	COM  R23
0007bf 95e1      	NEG  R30
0007c0 4fff      	SBCI R31,-1
0007c1 4f6f      	SBCI R22,-1
0007c2 4f7f      	SBCI R23,-1
0007c3 9508      	RET
                 
                 __CBD1:
0007c4 2ffe      	MOV  R31,R30
0007c5 0fff      	ADD  R31,R31
0007c6 0bff      	SBC  R31,R31
0007c7 2f6f      	MOV  R22,R31
0007c8 2f7f      	MOV  R23,R31
0007c9 9508      	RET
                 
                 __CWD1:
0007ca 2f6f      	MOV  R22,R31
0007cb 0f66      	ADD  R22,R22
0007cc 0b66      	SBC  R22,R22
0007cd 2f76      	MOV  R23,R22
0007ce 9508      	RET
                 
                 __DIVB21U:
0007cf 2400      	CLR  R0
0007d0 e098      	LDI  R25,8
                 __DIVB21U1:
0007d1 0faa      	LSL  R26
0007d2 1c00      	ROL  R0
0007d3 1a0e      	SUB  R0,R30
0007d4 f410      	BRCC __DIVB21U2
0007d5 0e0e      	ADD  R0,R30
0007d6 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
0007d7 60a1      	SBR  R26,1
                 __DIVB21U3:
0007d8 959a      	DEC  R25
0007d9 f7b9      	BRNE __DIVB21U1
0007da 2fea      	MOV  R30,R26
0007db 2da0      	MOV  R26,R0
0007dc 9508      	RET
                 
                 __DIVB21:
0007dd d038      	RCALL __CHKSIGNB
0007de dff0      	RCALL __DIVB21U
0007df f40e      	BRTC __DIVB211
0007e0 95e1      	NEG  R30
                 __DIVB211:
0007e1 9508      	RET
                 
                 __DIVD21U:
0007e2 933f      	PUSH R19
0007e3 934f      	PUSH R20
0007e4 935f      	PUSH R21
0007e5 2400      	CLR  R0
0007e6 2411      	CLR  R1
0007e7 01a0      	MOVW R20,R0
0007e8 e230      	LDI  R19,32
                 __DIVD21U1:
0007e9 0faa      	LSL  R26
0007ea 1fbb      	ROL  R27
0007eb 1f88      	ROL  R24
0007ec 1f99      	ROL  R25
0007ed 1c00      	ROL  R0
0007ee 1c11      	ROL  R1
0007ef 1f44      	ROL  R20
0007f0 1f55      	ROL  R21
0007f1 1a0e      	SUB  R0,R30
0007f2 0a1f      	SBC  R1,R31
0007f3 0b46      	SBC  R20,R22
0007f4 0b57      	SBC  R21,R23
0007f5 f428      	BRCC __DIVD21U2
0007f6 0e0e      	ADD  R0,R30
0007f7 1e1f      	ADC  R1,R31
0007f8 1f46      	ADC  R20,R22
0007f9 1f57      	ADC  R21,R23
0007fa c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0007fb 60a1      	SBR  R26,1
                 __DIVD21U3:
0007fc 953a      	DEC  R19
0007fd f759      	BRNE __DIVD21U1
0007fe 01fd      	MOVW R30,R26
0007ff 01bc      	MOVW R22,R24
000800 01d0      	MOVW R26,R0
000801 01ca      	MOVW R24,R20
000802 915f      	POP  R21
000803 914f      	POP  R20
000804 913f      	POP  R19
000805 9508      	RET
                 
                 __MODB21:
000806 94e8      	CLT
000807 ffa7      	SBRS R26,7
000808 c002      	RJMP __MODB211
000809 95a1      	NEG  R26
00080a 9468      	SET
                 __MODB211:
00080b fde7      	SBRC R30,7
00080c 95e1      	NEG  R30
00080d dfc1      	RCALL __DIVB21U
00080e 2fea      	MOV  R30,R26
00080f f40e      	BRTC __MODB212
000810 95e1      	NEG  R30
                 __MODB212:
000811 9508      	RET
                 
                 __MODD21U:
000812 dfcf      	RCALL __DIVD21U
000813 01fd      	MOVW R30,R26
000814 01bc      	MOVW R22,R24
000815 9508      	RET
                 
                 __CHKSIGNB:
000816 94e8      	CLT
000817 ffe7      	SBRS R30,7
000818 c002      	RJMP __CHKSB1
000819 95e1      	NEG  R30
00081a 9468      	SET
                 __CHKSB1:
00081b ffa7      	SBRS R26,7
00081c c004      	RJMP __CHKSB2
00081d 95a1      	NEG  R26
00081e f800      	BLD  R0,0
00081f 9403      	INC  R0
000820 fa00      	BST  R0,0
                 __CHKSB2:
000821 9508      	RET
                 
                 __GETW1P:
000822 91ed      	LD   R30,X+
000823 91fc      	LD   R31,X
000824 9711      	SBIW R26,1
000825 9508      	RET
                 
                 __GETD1P:
000826 91ed      	LD   R30,X+
000827 91fd      	LD   R31,X+
000828 916d      	LD   R22,X+
000829 917c      	LD   R23,X
00082a 9713      	SBIW R26,3
00082b 9508      	RET
                 
                 __GETD1P_INC:
00082c 91ed      	LD   R30,X+
00082d 91fd      	LD   R31,X+
00082e 916d      	LD   R22,X+
00082f 917d      	LD   R23,X+
000830 9508      	RET
                 
                 __GETW1Z:
000831 920f      	PUSH R0
000832 9001      	LD   R0,Z+
000833 81f0      	LD   R31,Z
000834 2de0      	MOV  R30,R0
000835 900f      	POP  R0
000836 9508      	RET
                 
                 __GETW2X:
000837 920f      	PUSH R0
000838 900d      	LD   R0,X+
000839 91bc      	LD   R27,X
00083a 2da0      	MOV  R26,R0
00083b 900f      	POP  R0
00083c 9508      	RET
                 
                 __GETD1S0:
00083d 81e8      	LD   R30,Y
00083e 81f9      	LDD  R31,Y+1
00083f 816a      	LDD  R22,Y+2
000840 817b      	LDD  R23,Y+3
000841 9508      	RET
                 
                 __GETD2S0:
000842 81a8      	LD   R26,Y
000843 81b9      	LDD  R27,Y+1
000844 818a      	LDD  R24,Y+2
000845 819b      	LDD  R25,Y+3
000846 9508      	RET
                 
                 __PUTD1S0:
000847 83e8      	ST   Y,R30
000848 83f9      	STD  Y+1,R31
000849 836a      	STD  Y+2,R22
00084a 837b      	STD  Y+3,R23
00084b 9508      	RET
                 
                 __PUTPARD1:
00084c 937a      	ST   -Y,R23
00084d 936a      	ST   -Y,R22
00084e 93fa      	ST   -Y,R31
00084f 93ea      	ST   -Y,R30
000850 9508      	RET
                 
                 __PUTPARD2:
000851 939a      	ST   -Y,R25
000852 938a      	ST   -Y,R24
000853 93ba      	ST   -Y,R27
000854 93aa      	ST   -Y,R26
000855 9508      	RET
                 
                 __SWAPD12:
000856 2e18      	MOV  R1,R24
000857 2f86      	MOV  R24,R22
000858 2d61      	MOV  R22,R1
000859 2e19      	MOV  R1,R25
00085a 2f97      	MOV  R25,R23
00085b 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
00085c 2e1b      	MOV  R1,R27
00085d 2fbf      	MOV  R27,R31
00085e 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00085f 2e1a      	MOV  R1,R26
000860 2fae      	MOV  R26,R30
000861 2de1      	MOV  R30,R1
000862 9508      	RET
                 
                 __CPD10:
000863 9730      	SBIW R30,0
000864 4060      	SBCI R22,0
000865 4070      	SBCI R23,0
000866 9508      	RET
                 
                 __ANEGF1:
000867 9730      	SBIW R30,0
000868 4060      	SBCI R22,0
000869 4070      	SBCI R23,0
00086a f009      	BREQ __ANEGF10
00086b 5870      	SUBI R23,0x80
                 __ANEGF10:
00086c 9508      	RET
                 
                 __ROUND_REPACK:
00086d 2355      	TST  R21
00086e f442      	BRPL __REPACK
00086f 3850      	CPI  R21,0x80
000870 f411      	BRNE __ROUND_REPACK0
000871 ffe0      	SBRS R30,0
000872 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000873 9631      	ADIW R30,1
000874 1f69      	ADC  R22,R25
000875 1f79      	ADC  R23,R25
000876 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000877 e850      	LDI  R21,0x80
000878 2757      	EOR  R21,R23
000879 f411      	BRNE __REPACK0
00087a 935f      	PUSH R21
00087b c0cf      	RJMP __ZERORES
                 __REPACK0:
00087c 3f5f      	CPI  R21,0xFF
00087d f031      	BREQ __REPACK1
00087e 0f66      	LSL  R22
00087f 0c00      	LSL  R0
000880 9557      	ROR  R21
000881 9567      	ROR  R22
000882 2f75      	MOV  R23,R21
000883 9508      	RET
                 __REPACK1:
000884 935f      	PUSH R21
000885 2000      	TST  R0
000886 f00a      	BRMI __REPACK2
000887 c0ce      	RJMP __MAXRES
                 __REPACK2:
000888 c0c7      	RJMP __MINRES
                 
                 __UNPACK:
000889 e850      	LDI  R21,0x80
00088a 2e19      	MOV  R1,R25
00088b 2215      	AND  R1,R21
00088c 0f88      	LSL  R24
00088d 1f99      	ROL  R25
00088e 2795      	EOR  R25,R21
00088f 0f55      	LSL  R21
000890 9587      	ROR  R24
                 
                 __UNPACK1:
000891 e850      	LDI  R21,0x80
000892 2e07      	MOV  R0,R23
000893 2205      	AND  R0,R21
000894 0f66      	LSL  R22
000895 1f77      	ROL  R23
000896 2775      	EOR  R23,R21
000897 0f55      	LSL  R21
000898 9567      	ROR  R22
000899 9508      	RET
                 
                 __CFD1U:
00089a 9468      	SET
00089b c001      	RJMP __CFD1U0
                 __CFD1:
00089c 94e8      	CLT
                 __CFD1U0:
00089d 935f      	PUSH R21
00089e dff2      	RCALL __UNPACK1
00089f 3870      	CPI  R23,0x80
0008a0 f018      	BRLO __CFD10
0008a1 3f7f      	CPI  R23,0xFF
0008a2 f408      	BRCC __CFD10
0008a3 c0a7      	RJMP __ZERORES
                 __CFD10:
0008a4 e156      	LDI  R21,22
0008a5 1b57      	SUB  R21,R23
0008a6 f4aa      	BRPL __CFD11
0008a7 9551      	NEG  R21
0008a8 3058      	CPI  R21,8
0008a9 f40e      	BRTC __CFD19
0008aa 3059      	CPI  R21,9
                 __CFD19:
0008ab f030      	BRLO __CFD17
0008ac efef      	SER  R30
0008ad efff      	SER  R31
0008ae ef6f      	SER  R22
0008af e77f      	LDI  R23,0x7F
0008b0 f977      	BLD  R23,7
0008b1 c01a      	RJMP __CFD15
                 __CFD17:
0008b2 2777      	CLR  R23
0008b3 2355      	TST  R21
0008b4 f0b9      	BREQ __CFD15
                 __CFD18:
0008b5 0fee      	LSL  R30
0008b6 1fff      	ROL  R31
0008b7 1f66      	ROL  R22
0008b8 1f77      	ROL  R23
0008b9 955a      	DEC  R21
0008ba f7d1      	BRNE __CFD18
0008bb c010      	RJMP __CFD15
                 __CFD11:
0008bc 2777      	CLR  R23
                 __CFD12:
0008bd 3058      	CPI  R21,8
0008be f028      	BRLO __CFD13
0008bf 2fef      	MOV  R30,R31
0008c0 2ff6      	MOV  R31,R22
0008c1 2f67      	MOV  R22,R23
0008c2 5058      	SUBI R21,8
0008c3 cff9      	RJMP __CFD12
                 __CFD13:
0008c4 2355      	TST  R21
0008c5 f031      	BREQ __CFD15
                 __CFD14:
0008c6 9576      	LSR  R23
0008c7 9567      	ROR  R22
0008c8 95f7      	ROR  R31
0008c9 95e7      	ROR  R30
0008ca 955a      	DEC  R21
0008cb f7d1      	BRNE __CFD14
                 __CFD15:
0008cc 2000      	TST  R0
0008cd f40a      	BRPL __CFD16
0008ce deed      	RCALL __ANEGD1
                 __CFD16:
0008cf 915f      	POP  R21
0008d0 9508      	RET
                 
                 __CDF1U:
0008d1 9468      	SET
0008d2 c001      	RJMP __CDF1U0
                 __CDF1:
0008d3 94e8      	CLT
                 __CDF1U0:
0008d4 9730      	SBIW R30,0
0008d5 4060      	SBCI R22,0
0008d6 4070      	SBCI R23,0
0008d7 f0b1      	BREQ __CDF10
0008d8 2400      	CLR  R0
0008d9 f026      	BRTS __CDF11
0008da 2377      	TST  R23
0008db f412      	BRPL __CDF11
0008dc 9400      	COM  R0
0008dd dede      	RCALL __ANEGD1
                 __CDF11:
0008de 2e17      	MOV  R1,R23
0008df e17e      	LDI  R23,30
0008e0 2011      	TST  R1
                 __CDF12:
0008e1 f032      	BRMI __CDF13
0008e2 957a      	DEC  R23
0008e3 0fee      	LSL  R30
0008e4 1fff      	ROL  R31
0008e5 1f66      	ROL  R22
0008e6 1c11      	ROL  R1
0008e7 cff9      	RJMP __CDF12
                 __CDF13:
0008e8 2fef      	MOV  R30,R31
0008e9 2ff6      	MOV  R31,R22
0008ea 2d61      	MOV  R22,R1
0008eb 935f      	PUSH R21
0008ec df8a      	RCALL __REPACK
0008ed 915f      	POP  R21
                 __CDF10:
0008ee 9508      	RET
                 
                 __SWAPACC:
0008ef 934f      	PUSH R20
0008f0 01af      	MOVW R20,R30
0008f1 01fd      	MOVW R30,R26
0008f2 01da      	MOVW R26,R20
0008f3 01ab      	MOVW R20,R22
0008f4 01bc      	MOVW R22,R24
0008f5 01ca      	MOVW R24,R20
0008f6 2d40      	MOV  R20,R0
0008f7 2c01      	MOV  R0,R1
0008f8 2e14      	MOV  R1,R20
0008f9 914f      	POP  R20
0008fa 9508      	RET
                 
                 __UADD12:
0008fb 0fea      	ADD  R30,R26
0008fc 1ffb      	ADC  R31,R27
0008fd 1f68      	ADC  R22,R24
0008fe 9508      	RET
                 
                 __NEGMAN1:
0008ff 95e0      	COM  R30
000900 95f0      	COM  R31
000901 9560      	COM  R22
000902 5fef      	SUBI R30,-1
000903 4fff      	SBCI R31,-1
000904 4f6f      	SBCI R22,-1
000905 9508      	RET
                 
                 __SUBF12:
000906 935f      	PUSH R21
000907 df81      	RCALL __UNPACK
000908 3890      	CPI  R25,0x80
000909 f171      	BREQ __ADDF129
00090a e850      	LDI  R21,0x80
00090b 2615      	EOR  R1,R21
                 
00090c c004      	RJMP __ADDF120
                 
                 __ADDF12:
00090d 935f      	PUSH R21
00090e df7a      	RCALL __UNPACK
00090f 3890      	CPI  R25,0x80
000910 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000911 3870      	CPI  R23,0x80
000912 f121      	BREQ __ADDF128
                 __ADDF121:
000913 2f57      	MOV  R21,R23
000914 1b59      	SUB  R21,R25
000915 f12b      	BRVS __ADDF1211
000916 f412      	BRPL __ADDF122
000917 dfd7      	RCALL __SWAPACC
000918 cffa      	RJMP __ADDF121
                 __ADDF122:
000919 3158      	CPI  R21,24
00091a f018      	BRLO __ADDF123
00091b 27aa      	CLR  R26
00091c 27bb      	CLR  R27
00091d 2788      	CLR  R24
                 __ADDF123:
00091e 3058      	CPI  R21,8
00091f f028      	BRLO __ADDF124
000920 2fab      	MOV  R26,R27
000921 2fb8      	MOV  R27,R24
000922 2788      	CLR  R24
000923 5058      	SUBI R21,8
000924 cff9      	RJMP __ADDF123
                 __ADDF124:
000925 2355      	TST  R21
000926 f029      	BREQ __ADDF126
                 __ADDF125:
000927 9586      	LSR  R24
000928 95b7      	ROR  R27
000929 95a7      	ROR  R26
00092a 955a      	DEC  R21
00092b f7d9      	BRNE __ADDF125
                 __ADDF126:
00092c 2d50      	MOV  R21,R0
00092d 2551      	EOR  R21,R1
00092e f072      	BRMI __ADDF127
00092f dfcb      	RCALL __UADD12
000930 f438      	BRCC __ADDF129
000931 9567      	ROR  R22
000932 95f7      	ROR  R31
000933 95e7      	ROR  R30
000934 9573      	INC  R23
000935 f413      	BRVC __ADDF129
000936 c01f      	RJMP __MAXRES
                 __ADDF128:
000937 dfb7      	RCALL __SWAPACC
                 __ADDF129:
000938 df3e      	RCALL __REPACK
000939 915f      	POP  R21
00093a 9508      	RET
                 __ADDF1211:
00093b f7d8      	BRCC __ADDF128
00093c cffb      	RJMP __ADDF129
                 __ADDF127:
00093d 1bea      	SUB  R30,R26
00093e 0bfb      	SBC  R31,R27
00093f 0b68      	SBC  R22,R24
000940 f051      	BREQ __ZERORES
000941 f410      	BRCC __ADDF1210
000942 9400      	COM  R0
000943 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000944 2366      	TST  R22
000945 f392      	BRMI __ADDF129
000946 0fee      	LSL  R30
000947 1fff      	ROL  R31
000948 1f66      	ROL  R22
000949 957a      	DEC  R23
00094a f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
00094b 27ee      	CLR  R30
00094c 27ff      	CLR  R31
00094d 01bf      	MOVW R22,R30
00094e 915f      	POP  R21
00094f 9508      	RET
                 
                 __MINRES:
000950 efef      	SER  R30
000951 efff      	SER  R31
000952 e76f      	LDI  R22,0x7F
000953 ef7f      	SER  R23
000954 915f      	POP  R21
000955 9508      	RET
                 
                 __MAXRES:
000956 efef      	SER  R30
000957 efff      	SER  R31
000958 e76f      	LDI  R22,0x7F
000959 e77f      	LDI  R23,0x7F
00095a 915f      	POP  R21
00095b 9508      	RET
                 
                 __MULF12:
00095c 935f      	PUSH R21
00095d df2b      	RCALL __UNPACK
00095e 3870      	CPI  R23,0x80
00095f f359      	BREQ __ZERORES
000960 3890      	CPI  R25,0x80
000961 f349      	BREQ __ZERORES
000962 2401      	EOR  R0,R1
000963 9408      	SEC
000964 1f79      	ADC  R23,R25
000965 f423      	BRVC __MULF124
000966 f324      	BRLT __ZERORES
                 __MULF125:
000967 2000      	TST  R0
000968 f33a      	BRMI __MINRES
000969 cfec      	RJMP __MAXRES
                 __MULF124:
00096a 920f      	PUSH R0
00096b 931f      	PUSH R17
00096c 932f      	PUSH R18
00096d 933f      	PUSH R19
00096e 934f      	PUSH R20
00096f 2711      	CLR  R17
000970 2722      	CLR  R18
000971 2799      	CLR  R25
000972 9f68      	MUL  R22,R24
000973 01a0      	MOVW R20,R0
000974 9f8f      	MUL  R24,R31
000975 2d30      	MOV  R19,R0
000976 0d41      	ADD  R20,R1
000977 1f59      	ADC  R21,R25
000978 9f6b      	MUL  R22,R27
000979 0d30      	ADD  R19,R0
00097a 1d41      	ADC  R20,R1
00097b 1f59      	ADC  R21,R25
00097c 9f8e      	MUL  R24,R30
00097d d027      	RCALL __MULF126
00097e 9fbf      	MUL  R27,R31
00097f d025      	RCALL __MULF126
000980 9f6a      	MUL  R22,R26
000981 d023      	RCALL __MULF126
000982 9fbe      	MUL  R27,R30
000983 d01d      	RCALL __MULF127
000984 9faf      	MUL  R26,R31
000985 d01b      	RCALL __MULF127
000986 9fae      	MUL  R26,R30
000987 0d11      	ADD  R17,R1
000988 1f29      	ADC  R18,R25
000989 1f39      	ADC  R19,R25
00098a 1f49      	ADC  R20,R25
00098b 1f59      	ADC  R21,R25
00098c 2fe3      	MOV  R30,R19
00098d 2ff4      	MOV  R31,R20
00098e 2f65      	MOV  R22,R21
00098f 2f52      	MOV  R21,R18
000990 914f      	POP  R20
000991 913f      	POP  R19
000992 912f      	POP  R18
000993 911f      	POP  R17
000994 900f      	POP  R0
000995 2366      	TST  R22
000996 f02a      	BRMI __MULF122
000997 0f55      	LSL  R21
000998 1fee      	ROL  R30
000999 1fff      	ROL  R31
00099a 1f66      	ROL  R22
00099b c002      	RJMP __MULF123
                 __MULF122:
00099c 9573      	INC  R23
00099d f24b      	BRVS __MULF125
                 __MULF123:
00099e dece      	RCALL __ROUND_REPACK
00099f 915f      	POP  R21
0009a0 9508      	RET
                 
                 __MULF127:
0009a1 0d10      	ADD  R17,R0
0009a2 1d21      	ADC  R18,R1
0009a3 1f39      	ADC  R19,R25
0009a4 c002      	RJMP __MULF128
                 __MULF126:
0009a5 0d20      	ADD  R18,R0
0009a6 1d31      	ADC  R19,R1
                 __MULF128:
0009a7 1f49      	ADC  R20,R25
0009a8 1f59      	ADC  R21,R25
0009a9 9508      	RET
                 
                 __DIVF21:
0009aa 935f      	PUSH R21
0009ab dedd      	RCALL __UNPACK
0009ac 3870      	CPI  R23,0x80
0009ad f421      	BRNE __DIVF210
0009ae 2011      	TST  R1
                 __DIVF211:
0009af f40a      	BRPL __DIVF219
0009b0 cf9f      	RJMP __MINRES
                 __DIVF219:
0009b1 cfa4      	RJMP __MAXRES
                 __DIVF210:
0009b2 3890      	CPI  R25,0x80
0009b3 f409      	BRNE __DIVF218
                 __DIVF217:
0009b4 cf96      	RJMP __ZERORES
                 __DIVF218:
0009b5 2401      	EOR  R0,R1
0009b6 9408      	SEC
0009b7 0b97      	SBC  R25,R23
0009b8 f41b      	BRVC __DIVF216
0009b9 f3d4      	BRLT __DIVF217
0009ba 2000      	TST  R0
0009bb cff3      	RJMP __DIVF211
                 __DIVF216:
0009bc 2f79      	MOV  R23,R25
0009bd 931f      	PUSH R17
0009be 932f      	PUSH R18
0009bf 933f      	PUSH R19
0009c0 934f      	PUSH R20
0009c1 2411      	CLR  R1
0009c2 2711      	CLR  R17
0009c3 2722      	CLR  R18
0009c4 2733      	CLR  R19
0009c5 01a9      	MOVW R20,R18
0009c6 e290      	LDI  R25,32
                 __DIVF212:
0009c7 17ae      	CP   R26,R30
0009c8 07bf      	CPC  R27,R31
0009c9 0786      	CPC  R24,R22
0009ca 0741      	CPC  R20,R17
0009cb f030      	BRLO __DIVF213
0009cc 1bae      	SUB  R26,R30
0009cd 0bbf      	SBC  R27,R31
0009ce 0b86      	SBC  R24,R22
0009cf 0b41      	SBC  R20,R17
0009d0 9408      	SEC
0009d1 c001      	RJMP __DIVF214
                 __DIVF213:
0009d2 9488      	CLC
                 __DIVF214:
0009d3 1f55      	ROL  R21
0009d4 1f22      	ROL  R18
0009d5 1f33      	ROL  R19
0009d6 1c11      	ROL  R1
0009d7 1faa      	ROL  R26
0009d8 1fbb      	ROL  R27
0009d9 1f88      	ROL  R24
0009da 1f44      	ROL  R20
0009db 959a      	DEC  R25
0009dc f751      	BRNE __DIVF212
0009dd 01f9      	MOVW R30,R18
0009de 2d61      	MOV  R22,R1
0009df 914f      	POP  R20
0009e0 913f      	POP  R19
0009e1 912f      	POP  R18
0009e2 911f      	POP  R17
0009e3 2366      	TST  R22
0009e4 f032      	BRMI __DIVF215
0009e5 0f55      	LSL  R21
0009e6 1fee      	ROL  R30
0009e7 1fff      	ROL  R31
0009e8 1f66      	ROL  R22
0009e9 957a      	DEC  R23
0009ea f24b      	BRVS __DIVF217
                 __DIVF215:
0009eb de81      	RCALL __ROUND_REPACK
0009ec 915f      	POP  R21
0009ed 9508      	RET
                 
                 __CMPF12:
0009ee 2399      	TST  R25
0009ef f09a      	BRMI __CMPF120
0009f0 2377      	TST  R23
0009f1 f042      	BRMI __CMPF121
0009f2 1797      	CP   R25,R23
0009f3 f048      	BRLO __CMPF122
0009f4 f429      	BRNE __CMPF121
0009f5 17ae      	CP   R26,R30
0009f6 07bf      	CPC  R27,R31
0009f7 0786      	CPC  R24,R22
0009f8 f020      	BRLO __CMPF122
0009f9 f031      	BREQ __CMPF123
                 __CMPF121:
0009fa 9498      	CLZ
0009fb 9488      	CLC
0009fc 9508      	RET
                 __CMPF122:
0009fd 9498      	CLZ
0009fe 9408      	SEC
0009ff 9508      	RET
                 __CMPF123:
000a00 9418      	SEZ
000a01 9488      	CLC
000a02 9508      	RET
                 __CMPF120:
000a03 2377      	TST  R23
000a04 f7c2      	BRPL __CMPF122
000a05 1797      	CP   R25,R23
000a06 f398      	BRLO __CMPF121
000a07 f7a9      	BRNE __CMPF122
000a08 17ea      	CP   R30,R26
000a09 07fb      	CPC  R31,R27
000a0a 0768      	CPC  R22,R24
000a0b f388      	BRLO __CMPF122
000a0c f399      	BREQ __CMPF123
000a0d cfec      	RJMP __CMPF121
                 
                 _delay_ms:
000a0e 9610      	adiw r26,0
000a0f f039      	breq __delay_ms1
                 __delay_ms0:
000a10 95a8      	wdr
                +
000a11 eb88     +LDI R24 , LOW ( 0xBB8 )
000a12 e09b     +LDI R25 , HIGH ( 0xBB8 )
                +__DELAY_USW_LOOP :
000a13 9701     +SBIW R24 , 1
000a14 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xBB8
000a15 9711      	sbiw r26,1
000a16 f7c9      	brne __delay_ms0
                 __delay_ms1:
000a17 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8535 register use summary:
r0 :  57 r1 :  34 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  49 r17:  57 r18:  53 r19:  36 r20:  50 r21:  89 r22: 152 r23: 137 
r24:  98 r25:  84 r26: 294 r27: 144 r28:  59 r29:   1 r30: 505 r31: 231 
x  :  74 y  : 644 z  :  18 
Registers used: 25 out of 35 (71.4%)

ATmega8535 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  21 add   :  14 
adiw  :  50 and   :   5 andi  :  10 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   8 brcs  :   3 break :   0 breq  :  50 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  26 
brlt  :   2 brmi  :  11 brne  :  60 brpl  :   9 brsh  :   9 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 cbi   :   8 
cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 clr   :  45 
cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :   8 cp    :  14 
cpc   :  18 cpi   :  82 cpse  :   0 dec   :  15 des   :   0 eor   :   7 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :  11 ijmp  :   0 in    :   5 
inc   :   5 ld    :  62 ldd   : 340 ldi   : 283 lds   :   0 lpm   :  12 
lsl   :  14 lsr   :   3 mov   :  80 movw  :  76 mul   :  11 muls  :   0 
mulsu :   0 neg   :   9 nop   :   0 or    :   2 ori   :   9 out   :  21 
pop   :  24 push  :  24 rcall : 192 ret   :  61 reti  :   0 rjmp  : 167 
rol   :  32 ror   :  15 sbc   :  11 sbci  :  39 sbi   :   9 sbic  :   1 
sbis  :   0 sbiw  :  45 sbr   :   4 sbrc  :   4 sbrs  :  20 sec   :   5 
seh   :   0 sei   :   0 sen   :   0 ser   :   8 ses   :   0 set   :   4 
sev   :   0 sez   :   1 sleep :   0 spm   :   0 st    : 127 std   : 196 
sts   :   2 sub   :   6 subi  :  70 swap  :   1 tst   :  24 wdr   :   1 

Instructions used: 77 out of 114 (67.5%)

ATmega8535 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001430   5088     80   5168    8192  63.1%
[.dseg] 0x000060 0x0001e8      0      8      8     512   1.6%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 8 warnings
